<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>机器学习-模型的评估和选择</title>
      <link href="/post/1d39bf4f.html"/>
      <url>/post/1d39bf4f.html</url>
      
        <content type="html"><![CDATA[<h1 id="误差和过拟合"><a href="#误差和过拟合" class="headerlink" title="误差和过拟合"></a>误差和过拟合</h1><h2 id="误差"><a href="#误差" class="headerlink" title="误差"></a>误差</h2><ul><li>训练集上的误差称为<strong>训练误差</strong>或<strong>经验误差</strong></li><li>测试集上的误差称为<strong>测试误差</strong></li><li>学习器在所有新样本上的误差称为<strong>泛化误差</strong></li></ul><h2 id="过拟合和欠拟合"><a href="#过拟合和欠拟合" class="headerlink" title="过拟合和欠拟合"></a>过拟合和欠拟合</h2><ul><li><strong>过拟合（也称为高方差）：</strong>即模型完美的匹配了已知的数据，但是对新的数据的预测有较大的偏差。（学习能力过强，以至于把训练样本所包含的不太一般的特性都学到了）</li><li><strong>欠拟合（也称为高偏差）：</strong>即模型对现有的数据高度不匹配。（学习能太差，训练样本的一般性质尚未学好）</li></ul><div class="note blue icon flat"><i class="note-icon fas fa-fan"></i><p>欠拟合：误认为绿色的都是树叶<br>过拟合：误认为树叶必须有锯齿状边缘</p></div><h1 id="训练集和测试集的划分方法"><a href="#训练集和测试集的划分方法" class="headerlink" title="训练集和测试集的划分方法"></a>训练集和测试集的划分方法</h1><ol><li><p>留出法</p><ol><li>将数据集划分为互斥的两个部分，一部分是训练集，一部分是测试集<br>  <img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/liuchufai.png" alt=""></li><li>划分时要尽量保证训练集和测试集数据分布的一致性，例如在分类样本中有1000个正样本，100个负样本，那么训练集和测试集中的正负样本比例也要基本遵循10：1这个比例</li><li>为了保证划分结果的随机性，可以将数据集多次随机划分，然后对多次划分结果取平均值</li><li>训练集和测试集的划分比例没有固定的值，通常将大约2/3~4/5的样本用于训练，最常见的训练集测试集比例有7：3或8：2</li></ol></li><li><p>交叉验证法</p><ol><li>先将数据集划分为k个大小相似的互斥子集，每个子集尽可能保持数据分布的一致性</li><li>然后每次选k-1个子集一组作为训练集，剩下一个子集作为测试集，共有k种分发得到k组训练集和测试集</li><li><p>进行k此训练和测试，对结果取平均值</p><p>交叉验证法评估结果的稳定性和保真性在很大程度上取决于k的取值，为了强调这一点，通常把交叉验证法称为”k折交叉验证”（k-fold cross validation），k通常取10—10折交叉验证。</p><p><img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/jiaochayanzhen.jpg" alt=""></p><p>交叉验证的好处就是从有限的数据中尽可能挖掘多的信息，从各种角度去学习我们现有的有限的数据，避免出现局部的极值。缺点就是，当数据集比较大时，训练模型的开销较大</p></li></ol></li><li><p>自助法</p><ol><li>每次随机从数据集（有m个样本）抽取一个样本，然后再放回（也就是说可能被重复抽出），m次后得到有m个样本的数据集，将其作为训练集</li><li><p>通过概率计算，经过m次抽样后会有约1/3的样本，始终不会被抽到，这部分数据可以用来测试</p><script type="math/tex; mode=display">\lim_{n \rightarrow \infty} (1 - \frac{1}{m})^m \rightarrow \frac{1}{e} \approx 0.368</script><p>自助法产生的测试集改变了初始数据集的分布，这会引入误差，因此在数据量足够时，采用留出法和交叉验证法较好</p></li></ol></li></ol><h1 id="性能度量"><a href="#性能度量" class="headerlink" title="性能度量"></a>性能度量</h1><h2 id="常见的性能度量"><a href="#常见的性能度量" class="headerlink" title="常见的性能度量"></a>常见的性能度量</h2><p>在<strong>回归任务</strong>中，最常用的性能度量是“均方误差”：</p><script type="math/tex; mode=display">E(f;D) = \frac{1}{m} \sum_{i = 1}^{m}{(f(x_i)-y_i)^2}</script><p>更一般的，对于数据分布$D$和概率函数$p(·)$，均方误差可描述为：</p><script type="math/tex; mode=display">E(f;D) = \int_{x \approx D} (f(x)-y)^2 p(x) {\rm d}x</script><p>在<strong>分类任务</strong>中，最常用的是错误率和精度，错误率是分类错误的样本数占样本总数的比例，精度则是分类正确的样本数占样本总数的比例： <span style="background-color: #DFF6FF;">错误率 + 进度 = 1</span>。</p><p>错误率定义为：</p><script type="math/tex; mode=display">E(f;D) = \frac{1}{m} \sum_{i = 1}^{m}{Ⅱ(f(x_i) \neq y_i)}</script><ul><li>$Ⅱ(f(x_i) \neq y_i)$是指如果$f(x_i) = y_i$则等于0，否则为1。</li></ul><p>精度定义为：</p><script type="math/tex; mode=display">acc(f;D) = \frac{1}{m} \sum_{i = 1}^{m}{Ⅱ(f(x_i) = y_i)} = 1 - E(f;D)</script><p>更一般的，对于数据分布$D$和概率密度函数$p(·)$，错误率和精度可分别描述为：</p><script type="math/tex; mode=display">E(f;D) = \int_{x \approx D} Ⅱ(f(x_i) \neq y_i) p(x) {\rm d}x</script><h2 id="查准率和查全率-召回率"><a href="#查准率和查全率-召回率" class="headerlink" title="查准率和查全率(召回率)"></a>查准率和查全率(召回率)</h2><p>有时候，单纯的看模型对特定数据预测的准确度是不足以评价整个模型的。所以我们引入了查准率和查全率(召回率)的概念。</p><p><img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/chazhaolv.png" alt=""></p><p>对于二分类问题，分类结果混淆矩阵与查准/查全率定义如下：</p><p><img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/defchazhao.png" alt=""></p><p>查准率：</p><script type="math/tex; mode=display">P = \frac{TP}{TP + FP}</script><p>查全率：</p><script type="math/tex; mode=display">R = \frac{TP}{TP + FN}</script><h2 id="F1-Score"><a href="#F1-Score" class="headerlink" title="F1 Score"></a>F1 Score</h2><p>为了结合查准率和召回率来评估模型，引入了F1 Score这个概念：</p><script type="math/tex; mode=display">F1 Score = \frac{2PR}{P + R}</script><p>如果查准率和召回率之中有一个为0的话，那么F1 Score也为0，理想状态下（P和R都为1），F1 Score的值为1。</p><h3 id="P-R曲线"><a href="#P-R曲线" class="headerlink" title="P-R曲线"></a>P-R曲线</h3><p>“P-R曲线”正是描述查准/查全率变化的曲线。</p><ul><li><p>P-R曲线的定义：根据学习器的预测结果（一般为一个实值或概率）对测试样本进行排序，将最可能是“正例”的样本排在前面，最不可能是“正例”的排在后面，按此顺序逐个把样本作为“正例”进行预测，每次计算出当前的P值和R值</p><p><img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/pr.png" alt=""></p></li><li><p>P-R曲线的评估：若一个学习器A的P-R曲线被另一个学习器B的P-R曲线完全包住，则称：B的性能优于A。若A和B的曲线发生了交叉，则谁的曲线下的面积大，谁的性能更优。但一般来说，曲线下的面积是很难进行估算的，所以衍生出了“平衡点”（Break-Event Point，简称BEP），即当P=R时的取值，平衡点的取值越高，性能更优。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交通灯</title>
      <link href="/post/ef0dd315.html"/>
      <url>/post/ef0dd315.html</url>
      
        <content type="html"><![CDATA[<h1 id="想法来源"><a href="#想法来源" class="headerlink" title="想法来源"></a>想法来源</h1><p>这是源于一次过马路时候的想法，有时候感觉运气很好，就一路的绿灯，又或者运气不好，一路的红灯。就想，如何设计出一个友好的软件能够做到在安全的情况下用最短的时间到达自己的目的地。</p><h1 id="情况分析"><a href="#情况分析" class="headerlink" title="情况分析"></a>情况分析</h1><p>理想的情况下是在最迟的时间里出发，一路绿灯，以允许的最快速度到底目的地<br>情况1并不实际，所以在设定是提前5-10分钟出发（应该没人会不喜欢提前一点做打算吧），设计出最短的时间里到底目的地。（这种情况下有时意味着可能会绕一点点路，毕竟有时候最短的并不一定是最快的路径）<br>情况2是系统设计的时间安排，这种情况是自己设定时间的情况下，这种情况分为两种<br>你是个遵守时刻的人（👏）：这里你设定的时间比系统早，这里沿用情况2的设定，并为你进行路线优化。<br>你是个热爱冒险的人（✊）：你喜欢卡点上学/上班/约会（这个应该没有人会喜欢吧）/其他，这里有专门的路线设计，但是这里意味着你不能低于某一个恒定的速度（安全范围内所允许的最高速度内）去到达你的目的地，有时候这也意味着道路的崎岖和精神上的高度刺激⚠️</p><h1 id="算法的设计"><a href="#算法的设计" class="headerlink" title="算法的设计"></a>算法的设计</h1><p>这里的目的是为了最快的到达目的地，所以是以时间为最高优先级，并不考虑在路上的舒适度，除非有足够的时间去到达目的地。</p><h1 id="具体是实现过程（待完成）"><a href="#具体是实现过程（待完成）" class="headerlink" title="具体是实现过程（待完成）"></a>具体是实现过程（待完成）</h1><p>初始的想法是通过大量的人工勘探，去记录每个地点的红绿灯的时间点（初期的数据基础）。后期通过用户的基础，分析车辆的运动状态，通过大数据得到一个路口的交通灯的状态，进行聚合分析。</p><h1 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h1><p>由于时间的特定性，可能大数据得到的交通灯的状态会是上下班高峰期的数据，其他时间段内的数据可能会由于缺乏大量的数据支持而不具有普适性。</p><h2 id="特殊情况😟"><a href="#特殊情况😟" class="headerlink" title="特殊情况😟"></a>特殊情况😟</h2><ol><li>特殊时间段的红绿灯调整（如何及时得知）</li><li>某段路途在维修</li><li>突发的交通事故无法及时解决</li><li>特殊的时间里会有移动的交通灯存在，比如学校放学的时候，最好的解决办法就是绕过他。</li></ol><h2 id="与导航软件的不同在于什么"><a href="#与导航软件的不同在于什么" class="headerlink" title="与导航软件的不同在于什么"></a>与导航软件的不同在于什么</h2><ol><li>导航软件是基于路线最短的规则，我们这是基于时间最短的规则</li><li>还没有想到（QAQ）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 疯狂的想法 </category>
          
          <category> 便捷生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高等数学660题</title>
      <link href="/post/5b4df50f.html"/>
      <url>/post/5b4df50f.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>写在前面：一些常用的等价代换公式<br>$当x \rightarrow 0 时$<br>$\sin x$ ~ $x$, $\tan x$ ~ $x$, $\arcsin x$ ~ $x$<br>$1 - \cos x$ ~ $\frac{x^2}{2}$<br>$e^x - 1$ ~ $x$, $a^x - 1$ ~ $x \ln a$<br>$\ln (1+x)$ ~ $x$<br>$\sqrt[n]{1+x}$ ~ $\frac{x}{n}$<br>$(1+x)^a - 1$ ~ $ax$</p></blockquote><aside>📌 题目6：$$（泰勒公式）I = \lim_{x \rightarrow 0} \frac{x \sin x^2 - 2(1 - \cos x)\sin x}{x^2}$$</aside><aside>💡解答：$$\sin x = x - \frac{1}{6} x^3 + \omicron(x^4)$$$$x \sin x^2 = x(x^2 + \omicron(x^4))$$$$-2 \sin x = -2(x - \frac{1}{6}x^3 + \omicron(x^4))$$$$\sin 2x = 2x - \frac{1}{6}(2x)^3 + \omicron(x^4)$$$$相加得0 + \omicron(x^4)$$$$I = \lim_{x \rightarrow 0} \frac{\omicron(x^4)}{x^4} = 0$$</aside><p>📑<span style="background-color: #c8d9eb;" ><font color="ee712b">重点：</font></span></p><ol><li>泰勒公式：</li><li>拉格朗日定理：</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高等数学水平自测一</title>
      <link href="/post/5f549694.html"/>
      <url>/post/5f549694.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>$\int^1_e\ln x {\rm d}x = 1$<br> 用的的公式为：$\int^a_b u {\rm d}v = uv |^a_b - \int^a_b v {\rm d}u$</p></li><li><p>幂级数的收敛半径问题（查找中）</p></li><li><p>二重积分的问题：$\int<em>{0}^{1} {\rm d}x\int</em>{e^x}^{e}f(x,y){\rm d}y = \int<em>{1}^{e}{\rm d}y\int</em>{0}^{\ln y}f(x,y){\rm d}x$<br>画图解决问题：<img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/Snipaste_2022-03-12_16-16-40.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高等数学水平自测二</title>
      <link href="/post/64d4b83d.html"/>
      <url>/post/64d4b83d.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络复习</title>
      <link href="/post/9a8cdc59.html"/>
      <url>/post/9a8cdc59.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>可以观看这个：<a href="https://www.notion.so/ustsking/bbf130e424764e1a99114c6d4d270a7e" target="_blank">Notion版本</a> ；排版的更加好看</p><h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a><strong>选择题</strong></h2></blockquote><ol><li>MAC地址存储在计算机的网卡上<ul><li>MAC地址长48位，6个字节，采用16进制</li></ul></li><li>HTTP在TCP中的默认端口号是80</li><li>合法的Internet主机IP地址：<ul><li>小于255</li><li>以255结尾的表示为广播地址</li><li>0开头的表示本地网络</li><li>三类网络地址中不分配的地址为<ul><li>A：10.0.0.0-10.255.255.255</li><li>B：172.16.0.0-172.31.255.255</li><li>C：192.168.0.0-192.168.255.255</li></ul></li></ul></li><li>TCP报文首部确定连接<ul><li>URG=1：紧急数据传输</li><li>ACK=1：确认连接</li><li>PSH=1：尽快交付</li><li>RST=1：重新连接</li><li>SYN=1：请求连接</li><li>FIN=1：释放连接</li></ul></li><li>作为一个成功的系统而成为计算机网络技术发展中的一个里程碑的是ARPNET</li><li>以太网：采用半双工通信，没有控制中心</li><li>一些传输的单位<ul><li>数据链路层传输的PDU是数据帧</li><li>UDP是面向报文的运输层协议</li><li>在OSI/RM的网络层中，数据以分组为单位进行传输</li><li>串行通信中，PPP协议面向字符</li><li>TCP的滑动窗口是以字节为单位的</li></ul></li><li>路由算法<ul><li>RIP：分布式的基于距离向量的路由选择协议，适合小型，动态的互联网使用</li><li>OSPT：分布式的基于链路状态的路由选择协议，适用大型，动态的互联网使用</li></ul></li><li>计算机和终端统称为DTE</li><li>无线城域网的标准是IEEE802.16</li><li>IPv6的0缩写只能使用一次</li><li>子网掩码可以判断两台主机是否在同一子网</li><li>数据封装的过程：数据——报文段——数据报——数据帧——比特</li><li>具有检错和纠错功能的编码是海明码</li></ol><h2 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a>判断题</h2><ol><li>CSMA/CA：无线；CSMA/CD：有线</li></ol><h2 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a><strong>填空题</strong></h2><ol><li>按照网络覆盖的地理范围，计算机网络可分为局域网，城域网，广域网</li><li>物理层描述的媒体接口特性有：机械，电气，功能，过程</li><li>常见的局域网拓扑结构有环线型，星型，总线型，树型和网状</li><li>IPv6采用冒号16进制法书写地址</li><li>IPv4的地址长度为32位二进制，IPv6的地址长度为128位二进制</li><li>数据链路层的基本问题可以概括成封装成帧，透明传输和差错检测</li><li>Internet上的域名查询分为两种方式，分为递归查询和迭代查询</li><li>计算机网络各层次结构模型及其协议的集合称为网络体系结构</li><li>应用程序定义的Socket包括IP地址和端口号两部分</li><li>URL在WWW应用中的完整格式：<strong><a href="http://[用户名:口令@]主机域名或者IP地址[:端口号]/URL路径">http://[用户名:口令@]主机域名或者IP地址[:端口号]/URL路径</a></strong></li><li>局域网的数据链路层分为逻辑链路控制子层LLC和介质访问控制子层MAC两个子层</li><li>网桥分为透明网桥，源路由网桥等类型</li><li>Windows下的命令<ul><li>arp：决定一台远方主机的MAC地址</li><li>ipconfig：查看与主机的网络接口的相关选项和参数</li><li>ping：测试远方主机的连通性</li><li>netstat：显示网络命令</li><li>tracert：追踪网络数据包的路由途径</li><li>nslookup：查询域名</li></ul></li><li><del>ASN.1基本编码</del>（没理解）</li><li>DNS邮件交换记录的类型标识为MX，方向域名解析的域为in-addr.arpa</li><li>IEEE802.3：CSMA/CD协议；IEEE802.5：Token Passing协议</li><li>使用匿名FTP的时候，键入anonymous作为用户名，键入用户的电子邮件地址作为口令</li><li>T1标准的数据传输数率是<strong>1.544Mb/s</strong>，E1标准的数据传输数率是<strong>2.048Mb/s</strong></li></ol><h2 id="计算题"><a href="#计算题" class="headerlink" title="计算题"></a><strong>计算题</strong></h2><h3 id="IP地址和子网掩码的计算"><a href="#IP地址和子网掩码的计算" class="headerlink" title="IP地址和子网掩码的计算"></a><strong>IP地址和子网掩码的计算</strong></h3><ol><li>将IP地址和子网掩码变成二进制</li><li>将IP地址和子网掩码进行与运算得到子网地址</li><li>由子网掩码得到网络主机位数，将这部分对应的子网地址全部变为1，就可得到广播地址</li></ol><h3 id="CRC验证计算"><a href="#CRC验证计算" class="headerlink" title="CRC验证计算"></a><strong>CRC验证计算</strong></h3><ol><li>由G(x)得到G的值，如果$G=x^4+x+1$，那么G=10011。</li><li>由最高次项在发送的数据后添加0的个数，如果发送的数据是1101011011，那么被除数就是11010110110000</li><li>由被除数除以G得到余数R=1110，就是FCS的值</li></ol><h3 id="IP数据报的划分"><a href="#IP数据报的划分" class="headerlink" title="IP数据报的划分"></a><strong>IP数据报的划分</strong></h3><ol><li>不断减去最长的数据长度</li><li>偏移量由（数据长度-首部长度）/8</li><li>MF = 1 时，代表后面还有分片；MF = 0时，代表后面没有分片（注意， MF = 0不能确定是独立的数据报，还是分片得来的，只有当MF = 0且片段偏移字段〉0时，才能确 定是分片的最后一个分片）</li></ol><h3 id="电路交换和分组交换"><a href="#电路交换和分组交换" class="headerlink" title="电路交换和分组交换"></a><strong>电路交换和分组交换</strong></h3><p>电路交换</p><ol><li>先建立连接，时间为$s$</li><li>发送x bit的报文需要的时间$x/b$</li><li>每段链路的时延总和为$kd$</li><li>所以总的为$s+x/b+kd$</li></ol><p>分组交换</p><ol><li>报文划分$[x/p]$,每个分组的时延是$p/b$，总的发送时延为$[x/p] \cdot p/b$</li><li>链路的传播时延为$kd$</li><li>转发时延为$(k-1) \cdot p/b$</li><li>总的为$[x/p] \cdot p/b+kd+(k-1) \cdot p/b$</li></ol><h3 id="信道带宽问题"><a href="#信道带宽问题" class="headerlink" title="信道带宽问题"></a><strong>信道带宽问题</strong></h3><ol><li>香农公式：$C=Wlog_2(1+S/N)$</li><li>奈奎斯特：$C=2Hlog_2V$（1个编码表示两个状态时，V=2）</li><li>数据传输数率是：$C=Hlog_2N$</li><li>信道带宽是采样频率的一半</li></ol><h3 id="TCP工作问题"><a href="#TCP工作问题" class="headerlink" title="TCP工作问题"></a><strong>TCP工作问题</strong></h3><ol><li>满开始阶段</li><li>拥塞避免阶段</li><li>超时检测阶段</li></ol><h3 id="IP地址块问题"><a href="#IP地址块问题" class="headerlink" title="IP地址块问题"></a>IP地址块问题</h3><ol><li>如128.34.57.26/22的地址问题</li><li><p>先将128.34.57.26变成二进制</p><p> 10000000.00100010.00111001.00011010</p></li><li><p>由22知地址位为10位，所以最后10位从全0到全1</p><p> 10000000.00100010.00111001.00011010</p></li></ol><h3 id="最大吞吐量"><a href="#最大吞吐量" class="headerlink" title="最大吞吐量"></a>最大吞吐量</h3><p>带宽不受限制：</p><script type="math/tex; mode=display">W_T \cdot 8b/B \over RTT</script><h3 id="子网的划分（不会归纳）"><a href="#子网的划分（不会归纳）" class="headerlink" title="子网的划分（不会归纳）"></a><del>子网的划分</del>（不会归纳）</h3><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a><strong>简答题</strong></h2><h3 id="OSI-RM的七层物理模型"><a href="#OSI-RM的七层物理模型" class="headerlink" title="OSI/RM的七层物理模型"></a><strong>OSI/RM的七层物理模型</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/osi_rm.webp" alt=""></p><h3 id="MAC帧格式"><a href="#MAC帧格式" class="headerlink" title="MAC帧格式"></a><strong>MAC帧格式</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/mac.png" alt=""></p><p>类型：2字节，指出数据域中携带的数据应交给哪些协议实体处理</p><p>校验码：校验数据段（采用32位CRC冗余校验方式进行校验）</p><h3 id="IPV4数据报"><a href="#IPV4数据报" class="headerlink" title="IPV4数据报"></a><strong>IPV4数据报</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/ipv4.png" alt=""></p><p>版本：IP协议版本，这里为4</p><p>首部长度：占4位</p><p>总长度：占16位，指首部和数据之和的长度</p><p>标识：占16位，它是一个计数器，每产生一个数据报就加1</p><p>标志：占3位，标志字段的最低位为MF，MF=1表示后面还有分片；MF=0表示最后一个分片。标识字段中间的一位是DF，只有DF=0时才允许分片</p><p>片偏移：占13位，它指出较长的分组在分片后，某片在原分组中的相对位置，片偏移一8个字节为偏移单位</p><p>首部校验和：占16位，只校验分组的首部，而不校验数据部分</p><p>生存时间TTL：占8位，及数据报在网络中通过的路由器数的最大值</p><p>协议：占8位，指出使用何种协议，其中6表示TCP，17表示UDP</p><p>固定部分20个字节，可变部分40字节，首部最长60字节。</p><h3 id="TCP报文格式"><a href="#TCP报文格式" class="headerlink" title="TCP报文格式"></a><strong>TCP报文格式</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/tcp.png" alt=""></p><p>序号字段：占4个字节，TCP是面向字节流的</p><p>确认号字段：占4字节，是期望收到对方的下一个报文段的数据的第一个字节的序号。确认号=N，则表明到序号N-1为止的所有数据都已经收到</p><p>数据偏移：占4位，指出TCP报文段的数据起始处距离TCP报文段的起始处有多远</p><p>保留字段：占6位</p><p>标志位：</p><p>URG：URG=1时，表明紧急指针有效</p><p>ACK：ACK=1时，确认号字段（TCP三次握手里面的ack）才有效</p><p>PSH：就收到PSH=1的报文时，就尽快地交付接收应用进程，不用等到整个缓存都填满了后再向上交付</p><p>RST：当RST=1时，表明TCP连接中出了很严重的差错，必须释放连接，然后在重新建立连接</p><p>SYN：SYN=1、ACK=0，表明这是一个连接请求报文，对方若同意建立连接，则在响应报文中使用SYN=1、ACK=1</p><p>FIN：用来释放一个连接，FIN=1表明此报文段的发送方数据已经传送完毕</p><p>窗口字段：占2字节，它指出了现在允许对方发送的数据量</p><p>检验和：占2字节，检验范围包括首部和数据这两部分</p><p>紧急指针字段：占16位，指出文本中紧急数据共有多少字节</p><p>选项字段：长度可变</p><p>填充字段：为了使整个首部长度4字节的整数倍</p><h3 id="UDP报文格式"><a href="#UDP报文格式" class="headerlink" title="UDP报文格式"></a><strong>UDP报文格式</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/udp.png" alt=""></p><p>长度：UDP数据报长度，其最小值是8</p><p>校验和：检测UDP数据报在传输中是否出错，有错就丢弃，如果字段全为0，表明不校验。</p><aside>💡 总结：IP数据报：第13个字节开始是源IP地址，之后是目标IP地址TCP数据报：第3个字节是目的端口号，第8个字节之后是确认号</aside><h2 id="论述题-对着看吧"><a href="#论述题-对着看吧" class="headerlink" title="论述题(对着看吧)"></a><strong><del>论述题</del>(对着看吧)</strong></h2><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a><strong>名词解释</strong></h2><ol><li>HTTP：超文本传输协议</li><li>UDP：用户数据报协议</li><li>TCP：传输控制协议</li><li>SMTP：简单邮件传送协议</li><li>POP3：邮件读取协议</li><li>FTP：文件传送协议</li><li>SNMP：简单网络管理协议</li><li>DNS：域名服务</li><li>ARP：地址解析协议</li><li>ADSL：非对称数字用户线路</li><li>URL：统一资源定位符</li><li><del>CSMA/CA：</del></li><li><del>CSMA/CD：</del></li><li>RIP：路由信息协议</li><li>OSPF：开放最短通路优先</li><li>ICMP：网际控制报文协议</li><li>BGP：外部控制网关协议</li><li><del>Telnet：</del></li><li>MPLS：多协议标签交换</li><li>DHCP：动态主机配置协议</li><li>RTSP：实时流式协议</li></ol><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>T：传送<br>C：控制<br>P结尾：协议<br>I：网际<br>D：动态，数据<br>R：实时<br>O：开放<br>U：用户</p></div><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a><strong>其他</strong></h2><h3 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a><strong>网络安全</strong></h3><ol><li>RSA：非对称加密</li><li>DES：对称加密</li><li>MAC最小帧长64字节，帧头为18字节，数据部分不46-1500字节</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译原理-第一章</title>
      <link href="/post/d2a707.html"/>
      <url>/post/d2a707.html</url>
      
        <content type="html"><![CDATA[<h1 id="编译目标"><a href="#编译目标" class="headerlink" title="编译目标"></a>编译目标</h1><p>目标：把源代码变成目标代码</p><p>1.如果源代码在操作系统上运行：目标代码就是“汇编代码”。再通过汇编和链接的过程形成可执行文件，然后通过加载器加载到操作系统执行。</p><p>2.如果源代码在虚拟机(解释器)上运行：目标代码就是“解释器可以理解的中间形式的代码”，比如字节码(中间代码)IR、AST语法树。</p><p>编译过程可以分为这几个阶段，每个阶段做了一定的任务，层级的让下一个阶段进行。<br>    <img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/renwu.png" alt=""></p><h1 id="编译概述"><a href="#编译概述" class="headerlink" title="编译概述"></a>编译概述</h1><h2 id="翻译程序和编译程序"><a href="#翻译程序和编译程序" class="headerlink" title="翻译程序和编译程序"></a>翻译程序和编译程序</h2><h2 id="编译过程和编译程序"><a href="#编译过程和编译程序" class="headerlink" title="编译过程和编译程序"></a>编译过程和编译程序</h2><ol><li>通用程序设计语言的主要成份<span style="background-color: #f1e9e3;" ><font color="ee712b">声明＋操作＝完整定义</font></span></li><li>以<span style="background-color: #f1e9e3;" ><font color="ee712b">过程</font></span>为基本结构的程序设计语言的组成<ul><li>声明性语句：提供操作对象的性质，如数据类型、值、作用域等；</li><li>操作性语句：确定操作的计算次序，完成实际操作。</li><li>过程定义 = 过程头＋过程体</li></ul></li><li><p>以阶段划分编译器</p><p> <img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main/Gridea/bianyiqi.webp" alt=""></p><p> 注：符号表管理器和出错处理贯穿编译器工作的各个阶段.</p></li><li>编译器各阶段工作<ol><li>词法分析：词法分析的输入是源程序,输出是识别出的记号流.目的是识别单词. 至少分以下几类：关键字(保留字)、标识符、字面量、特殊符号</li><li>语法分析： 输入是词法分析器返回的记号流,输出是语法树.目的是得到语言结构并以树的形式表示.对于声明性语句,进行符号表的查填,对于可执行语句,检查结构合理的表达式运算是否有意义.</li><li>语义分析：根据语义规则对语法树中的语法单元进行静态语义检查,如类型检查和转换等,目的在于保证语法正确的结构在语义分析上也是合法的.</li><li>中间代码生成(可选)：生成一种既接近目标语言,又与具体机器无关的表示,便于代码优化与代码生成.(到目前为止，编译器与解释器可以一致)</li><li>中间代码优化(可选)：局部优化、循环优化、全局优化等；优化实际上是一个等价变换，变换前后的指令序列完成同样的功能，但在占用的空间上和程序执行的时间上都更省、更有效</li><li>目标代码生成：不同形式的目标代码—汇编语言形式、可重定位二进制代码形式、内存形式(Load-and-Go)</li><li>符号表管理：合理组织符号,便于各阶段查找\填写等.</li><li>出错处理：<figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">动态错误：源程序中的逻辑错误，发生在程序运行的时候。也称为动态语义错误</span><br><span class="line">静态错误：静态错误分为语法错误和静态语义错误.  </span><br><span class="line">&lt;1&gt; 语法错误：有关语言结构上的错误，如单词拼写错误、表达式缺少操作数、begin和end不匹配</span><br><span class="line">&lt;2&gt; 静态语义错误：分析源程序时可以发现的语言意义上的错误，如加法的两个操作数一个是整形变量，另一个是数组名</span><br></pre></td></tr></table></figure></li></ol></li><li>编译器的分析\综合模式<br><img src="https://upload-images.jianshu.io/upload_images/5267500-afbb123ec5a660fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/563/format/webp" alt=""><br>逻辑上把编译器分为分析(前端)部分和综合(后端)部分.<ol><li>分析(前端)：语言结构和意义的分析； 从词法分析到中间代码生成各阶段的工作</li><li>综合(后端)：语言意义处理；从中间代码生成到目标代码生成的各阶段的工作</li><li>编译器和解释器的区别往往是在形成中间代码之后开始的.</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 编译原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习-基础知识</title>
      <link href="/post/39787a22.html"/>
      <url>/post/39787a22.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>写在开头：由于刚开始学机器学习这门课，还有很多并不完美的地方，希望各位在评论区指正讨论🥳</p><p>推荐一个优秀的网站：<a href="https://tjxj.github.io" target="_blank">https://tjxj.github.io</a></p><p>更好的排版体验在这：<a href="https://ustsking.notion.site/60029ee34e554007aa98f9fa38eca1b5" target="_blank">Notion笔记-机器学习</a></p></blockquote><h1 id="什么是机器学习"><a href="#什么是机器学习" class="headerlink" title="什么是机器学习"></a>什么是机器学习</h1><ul><li><strong>Arthur Samuel</strong>：在没有明确设置的情况下，使计算机具有学习领域的能力</li><li><strong>Tom Mitchell</strong>：计算机程序从经验E中学习，解决某一任务T进行某一性能度量P，通过P测定在T上的表现因经验E而提高</li></ul><p>机器学习最重要的两个东西：</p><ol><li><strong>数据：</strong> 有数据才能训练程序，数据质量高，数量大$\Rightarrow$训练出好模型的<span style="background-color: #DFF6FF;">钥匙</span></li><li><strong>模型：</strong> 就是算法。特定的模型能够完成特定的任务。</li></ol><h1 id="机器学习分类"><a href="#机器学习分类" class="headerlink" title="机器学习分类"></a>机器学习分类</h1><p>机器学习大体上可以分为两类，一类是<strong>监督学习</strong>，一类是<strong>无监督学习</strong>。</p><p>顾名思义，有监督学习就是<strong>通过大量已知的输入和输出相配对的数据（有标记的数据）</strong>，让计算机从中学习规律，从而能针对新的输入做出合理的输出预测。无监督学习就是给计算机<strong>大量的无标记的输入数据</strong>，去分析它们内在的结构以及联系，从而去把这些数据自动分类，这就叫做<strong>聚类</strong>。</p><p>细分下去，有监督学习可以分为两种。一种是<strong>回归学习</strong>，即输出的结果是一个连续的函数（比如给了一些列的点，让计算机通过回归学习找到拟合这些点的曲线）；另外一种就是<strong>分类学习</strong>，即输出的结果是<strong>离散的</strong>（比如说判断癌细胞是不是良性：1是良性，0不是良性）</p><h1 id="机器学习开发的基本步骤"><a href="#机器学习开发的基本步骤" class="headerlink" title="机器学习开发的基本步骤"></a>机器学习开发的基本步骤</h1><ul><li>数据的采集和标记</li><li>数据的清洗：将数据单位进行统一</li><li>特征选择：除去无用的特征，选出有用的特征给模型进行训练</li><li>模型选择</li><li>模型训练+测试：数据一般通过<span style="background-color: #DFF6FF;">8：2</span>进行划分</li><li>模型优化</li></ul><h1 id="机器学习的基本术语"><a href="#机器学习的基本术语" class="headerlink" title="机器学习的基本术语"></a>机器学习的基本术语</h1><ul><li>数据集：所有纪录的集合</li><li>实例（样本）：每一条记录</li><li>特征（属性）：西瓜的色泽，根蒂等</li><li>特征向量：对于每一条记录，都可以在坐标轴中的一个点表示</li><li>维度：一个样本的特征数（<strong>维度灾难：维度非常大的时候</strong>）</li><li>训练集（特殊）：所有训练样本的集合</li><li>测试集（一般）：所有测试样本的集合</li><li>范化能力：机器学习所训练的模型对于新样本的适应能力（即从特殊到一般）</li><li>分类：预测值为离散值的问题</li><li>回归：预测值为连续值的问题</li><li>监督学习：训练数据有标记信息的学习任务（分类和回归问题都是监督学习）</li><li>无监督学习：训练数据没有标记信息的学习任务</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「ONE」曾经自命不凡的我们是如何走向平庸的</title>
      <link href="/post/2e6945fa.html"/>
      <url>/post/2e6945fa.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这是偶尔在one这个软件上看见的一篇文章，觉得不错，特地转载。</p><h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1><ol><li>身体条件无法支撑远大梦想</li><li>原就平庸，何谈自命不凡</li><li>随波逐流，盲目合群</li></ol><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><ol><li>由自命不凡一步步走向平庸，不是成长，而是被驯化，被磨平，不在充满激情与热血，自然而然地趋向于平静平缓，心气儿没了，如死水一潭，而且身体条件也不允许我们去抵抗，是一种在岁月中心甘情愿的妥协。</li><li>曾深陷囹圄，被现实的齿轮碾磨，在生活的废墟里攀爬，接受人生的洗礼，并最终接受自己的平庸。虽然如此，但我们还是要学会自己定义幸福，也不以自己的标准定义别人的幸福并进行比较。</li><li>归根结底，都是我们太规矩了，没有给自己一个试错的机会。</li><li>只能说，我们用大半辈子避免走向平庸，又用大半辈子和平庸的自己达成和解，属实不易。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reading </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Debain的Linux系统软件安装教程</title>
      <link href="/post/ed163951.html"/>
      <url>/post/ed163951.html</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>基于Debain的发行版，包管理器一般为APT，这里以APT为例。</p><h2 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h2><h2 id="修改源"><a href="#修改源" class="headerlink" title="修改源"></a>修改源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一般在etc/apt/sources.list下</span></span><br><span class="line">vim /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自己添加最近的源</span></span><br></pre></td></tr></table></figure><h2 id="软件更新"><a href="#软件更新" class="headerlink" title="软件更新"></a>软件更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测某个软件是否有更新</span></span><br><span class="line">apt list --upgradable|grep xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新软件</span></span><br><span class="line">apt install xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级所有软件</span></span><br><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure><h2 id="解决安装进程占用"><a href="#解决安装进程占用" class="headerlink" title="解决安装进程占用"></a>解决安装进程占用</h2><p>在 apt 安装软件的时候可能会出现以下问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无法获得锁 /var/lib/apt/lists/lock - open (11: 资源暂时不可用)</span><br></pre></td></tr></table></figure><p>这是因为 apt 进程被占用了，解决方法也比较简单粗暴，直接删除掉 lock 锁文件即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> /var/cache/apt/archives/lock</span><br><span class="line"><span class="built_in">rm</span> /var/lib/dpkg/lock</span><br></pre></td></tr></table></figure></p><h2 id="安装Nvdia显卡驱动"><a href="#安装Nvdia显卡驱动" class="headerlink" title="安装Nvdia显卡驱动"></a>安装Nvdia显卡驱动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nvidia-smi</span><br><span class="line"><span class="comment"># 安装完成后输入reboot或者手动重启即可</span></span><br></pre></td></tr></table></figure><h2 id="中文输入法的安装"><a href="#中文输入法的安装" class="headerlink" title="中文输入法的安装"></a>中文输入法的安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装输入法框架</span></span><br><span class="line">sudo apt install fcitx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Google拼音输入法</span></span><br><span class="line">sudo apt install fcitx-googlepinyin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启系统</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>安装完成后点击小企鹅，搜索google，至于第一位。</p><h2 id="Stacer安装"><a href="#Stacer安装" class="headerlink" title="Stacer安装"></a>Stacer安装</h2><p>一个监视程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加库</span></span><br><span class="line">sudo add-apt-repository ppa:oguzhaninan/stacer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新源</span></span><br><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">sudo apt install stacer</span><br></pre></td></tr></table></figure></p><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p>安装 Docker 用网上那个一键安装脚本貌似有点问题，这里单独记录一下，以便自己和其他网友使用：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加Docker PGP密钥</span></span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置docker apt源 我这里用的国内阿里云的docker下载源</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;deb https://mirrors.aliyun.com/docker-ce/linux/debian buster stable&#x27;</span>&gt; /etc/apt/sources.list.d/docker.list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新apt源</span></span><br><span class="line">apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果之前安装了docker的话 这里得卸载旧版本docker</span></span><br><span class="line">apt remove docker docker-engine docker.io</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装docker</span></span><br><span class="line">apt install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">docker version</span><br></pre></td></tr></table></figure><br>Docker 安装完成后，还需要对其进行简单优化一下，后面才能用对舒服一点。</p><h3 id="Dockers更换国内源"><a href="#Dockers更换国内源" class="headerlink" title="Dockers更换国内源"></a>Dockers更换国内源</h3><p>不替换源对话，docker pull 拉去镜像对速度实在太龟速了，如果你很佛系对话可以不进行更换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑这个文件，如果没有对话就创建这个文件</span></span><br><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这里使用的是国内 163 网易源，其他源可以自行百度替换。配置完成后重启服务才可以生效：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></p><h3 id="安装-docker-compose"><a href="#安装-docker-compose" class="headerlink" title="安装 docker compose"></a>安装 docker compose</h3><p>docker compose 神器，所以这里有必要安装一下。首先来查看最新版本[<a href="https://github.com/docker/compose/releases">点我查看</a>]<br>我写这篇文章的时候目前是<span style="background-color: #f1e9e3;" ><font color="ee712b">1.25.0-rc2</font></span>版本，具体根据新版本的变化自行调整下面命令来安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载docker-compose</span></span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/1.25.0-rc2/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给docker-compose执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看docker compose版本</span></span><br><span class="line">root@kali-linux:~<span class="comment"># docker-compose  version</span></span><br><span class="line">docker-compose version 1.25.0-rc2, build 661ac20e</span><br><span class="line">docker-py version: 4.0.1</span><br><span class="line">CPython version: 3.7.4</span><br><span class="line">OpenSSL version: OpenSSL 1.1.0k  28 May 2019</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Linux发行版 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jsproxy | 科学上网新方式</title>
      <link href="/post/1477c8c4.html"/>
      <url>/post/1477c8c4.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="389172d9603a0d2d6ce51dfb0e24c7349224f00845726fe3d6ff2d0d260373f9">947161b1da898b84a4f1e25893ec63758555ab6c1c1222466d530efee9219fed37a78e648ad59bb532c5027656c6cf57eeb78d6d13a1653af65ea8fcd80e79f7f0c39afbe73d19f72115bb072aad8f0def60e43295a9af70887b1d8b7392907205680df64557222639f19ca98edc908a0d3764c07ac3610595b3a84e061278c8b42a37dab898c2399c70f8aedb238bbff701c08533436d21926f84b61782119431919f5dc6a9d979e64f00d263a762e8dc6fc2ba4ea37b7253865e64ef054db2b9a1b3daa1091c964de94fb69c6eee594f3e609ce7899a0c9d839b68c1fa1590a7f33124f7d3ba57c5204ecc985e2835ca3c9ed50c438678831aedd4e2c41c4adbb0406f30b0cd6993fc2e1bb6964201948dbf5a20c58ddc1cf0016707de4d8de7cbebbd17ac92923763dbdd180ebc97e5136ad72a434dcbabbb5203eb1af774081dac199da1915dfea57021ac79b866c55eb50939ea28e9e41cfe02d1bc7e0476e5d737d6deda32a72bf18a0c2b352d4fc62ba6b8393e006bef718046c997bb196202288e7aadb5d0be6f27d05d7535d457a0baa65bdbe724f8fe3213e1f56b437a95101325b23cbe52d54c8b775fb2b7b4654b88e53dde50189c955ccb97139aac042652018c4b33291a1a6da4b068455cd4e35d4e90f4d173e6afa4a0ad1b8957df697aa3b00b0671bd7b9ea671aa113f8cdea9ebfa3c3a85093916140e8ca97abbbcd0f05b77a7617061a68390fb8f46bafe9d54be212df746470146a8e5c3b76d3eade2583785d058d4a89c8a9ef9c33c7f0cb5b77d97360cd2628ea70f46d08d5fa0227c672caa6089137e184f0e434eb9a1f41ef0ca5f7e6b74a962ea7e51ecb937c3dd4821f697431067dc701656d79339bc241e60ec2f68b42d2549fcc8021b4475bfbb01eaad0184b6096f3ee890a2db9ff850d9f0acc37ddc4268910088c1cf274ccab2bfbd3bb270882b8831d1bfa9dda2d6a79ff20633b6a62a2ed5966c2e386dc32bd60564bbe9545d28a48674aaeb0eb3cb2221fb29f71ca35854519e44bfb5d9e2815df48cd2c1ca01fb424d0123020a205dc6093f1eea724af02bb577a2754cd63a689459dd3fe64072a4fafcb8d8af68a95fb463daddd8154565069abe37d1e82a00aa50abff36504c9042550bcf9cee9803eff83a065fb47f763c451e0384d5d758fc48a65355680061c8b0fec681fb2e41997bb70ce5293f92a5be6d731140d351aa224554acf71205ac23dd902e630a8da44463c45c8e073e11a37b45619e8e9f2c3989a857a344b985af43925d95aac7a80dac6927ac5e4f048e332180f253167ed65a7ae2a4ec8b559341ef3523983669192b73c43eb96303db323cc246684eaea9a6c572c2efa140ee61c6fd06611e720a4257233b6e887695b2228da1c7b7e89662141777147009df83fc6eccedb4f833d565da1fc4990ba09dc83de2d58a31436e3cacd4dc99479868a464b99e3391dbc0f220f68ab81760da937766f71700f144313b2e172605058f49c99760011c21b6b55f24a036e865acc86ecd09dc64f0844d093d279ac324b9c4a84f809304685431b743c1ad6cab57350a1e0206bfdde618994e09e849e7308abd34c7254945e51cfe2033468ae97079a576a20b8142143323a785ac705f9fe6c5e0595545bad219b2f484dc823ac6b4bb0e8c2c473d89bfedd8f0026619aa67073d6757d9040d6278cb890386300b386e74748a06e481b67994d4c344be6cc33db3fad4f2475fae1225d6f556feedcb95199d4508a7181b3c9e21d3959343b412e5df77e1d45d0a6244f71e299d04a2a7d903c8377f8e7f5a538b1ad4f836111aaadff2be03aa3f1bb8c2636b1480c9065274c066494d42420a419c0c08d3f7fb7c90a02dd8c9573bfac376793f6cd633ae1c15cd0c6f67401252bd65e70ba72c4c982b7407ff540fa2da37db22cf2517f4074b467dcf5f26d45ae842bd044377efe6955bff80b58a6132f543a8f904031a5c21e2aef1da512ab5d3e3b9583f58e72de8a603c3a8b9a07574e6a5956d7199952e1129f2de7e89f0db0732b00f6c11184db040b49b4cbc60ed1d6f4b398068098a1f80acf41d1eeefb017a068187f3f4c0440dd73110dc71dc2d9e35fb36096a11ac2f01d59b670b7530dd624134a18e2ceb247aae845ee61b35b4505db9a02002a0132f25287b9c7d4ebfd0855e16d063825d37377a4ce49328cdd768f5a9a66b749d0a083bdb1ef85825cb038140b03f1a68f241ebb3196210f9759a830581397d88c42fa3bb4e0666aab2bad68f48b06435c6d19e15e3a7a5a62e8395824836c46b317e53b384660d8fbfb8b8636234a04e9a8f6478e10a7f9e8ef2311bfbf7221c3938fc06142806f0ffc699ddfa1b7e0955669c086c9f3079916d40b74ea0668a0e9d5b2fc1faf69aaec2628734b4c6cc7f830170698b3b35306352b1c4c7331c783b458634686402446ecdd60cd1d1433fe4c55c88958f76d598b5183519f0fd515acc9b1c501641456e0325759287fc2ccc1fd1428f248e0ee79921ec97a5c37bd21fe96288a0b554defc0075091321da046c97bb96828ac09d8596b64a44e5b766572a721c9a174723fa205a26d46445bf541a8e8da87cb4ef811564d53e0f804c5ca6f1e25f9af48125f6acd36e967b6a7e71ec91c413f6c66b4d0c69792602aab97e3c695d2aa6a25f60d8843084c60a9ebc408e84632663912ab2a08fcae4c19a1eaad735ca82a011853414e2b451c8e2053e1ec3c073a0ca7dbfa51fcfc2ddae282a67dc3c4b920339451ca3d357350179a4c2397ddeb4cf01358b08651886d1b4e40aab02d4b73f04eb1375ebb7b0655d45ac9e213a446deb88c656c2af7967d5f6b64d6c9c5fa630c6c505944cff4fc7409610684b8abc0fe326b7bbbcb25a0dc4374f8a57865319c62af350dba9875869e2f70e3f8671f96f5e974526c1e9347eaeb7dbb0c1dc43531250aa894d08be16a13b28761545a81d2047d109b09d50412d82da9b47be5c7509428bcc994aa624a91e28e5ba32186964220e1de591dd9a1a53d0a0b39420090a798fdb9014217d9d5c641d912b4a2d50ec0ab71588546754b2f53318a9e7c488ae07748bae6d6017d12361d74b8f68e69eb5b40b9d418faafc6dc6c87152ea1053860034f27e85427f2cd3a1c381dd582a5509782a4a248b8174f208074c2a09b697be24c5729fa0d8aea03a122c9ab70bb21c0be6e68ba275a8754253f29a84a9348a1ac9bb3727ed48cc30ddf47c087389cdd29495b6101b71b0766f6ece851071c2759ecabfbe5f3067fdacaf098f9b236ca6aaf09a8b828a6786a1cdc69f2de8afc11ffd8206505f84827da0a9288e080f9de9627a349c6f6c2271c662bfe5d519fe3ffc98064da589864e114b14f5aa9ae35156129df8a455948724da77b702419b64f16a6ab5c4b72905bb7eab5366d700611405c0e91a092e849cbf79deb0dab9c42ae8b194b078970c6b5fceaaa0cb7a79289394ffa0dd4770a66c66e92674a72bccce9a68d11fcf463e59337b33efd6ef87b26b0b5c821be78c46802379eeb7561e0482468ba0fd28ab66a5504a8f28d4c46c16cda2ebe48411c6e00f804058c16b4790d1839bd692058bda0bee2d12d4e3b3f6987a5b0c5e26d7591575f4d0c1e38fcf9a043c8624cb12becdbf61591ec1dce6bee48306552b813b39871038c32fba1e33764665ce39f6b9c6726179f6376ac343e50031b4cbb7e5975c10f923eafe9e4367026b13bb3f423ee3592ae56dd22d4fa6aaf1e5274712fbae2f9bce5a1c44f8d9e9a91fcff9a69cf0efaef3b71f28a21379bb1b2e2f67052ecc2111965cfb1b0ac59a2af450e317fc30e3f53687ec3e4bf82ade566943605f59994b1639dfd0e20d91caa58758e29474fb316abdaea384120e912889bfce0c53d5712d33c2529501dddacddf86b429d8361e17242a85f13b9fa261fb8b7e22da634ef8cd4ae8cecaacbabf04f6f0eb71806a237e490b01ac4497789da848e4be815145c0181ae521e72e42ee1328a376ff21bde07e05216125d91a0926bf9adaa7d71323ed35d2805f58e99acf9c73d0406c58f0b59394d9fd75e9d10b0a98b28c25</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Windows </category>
          
          <category> 加密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oh-My-Posh</title>
      <link href="/post/f6ae8385.html"/>
      <url>/post/f6ae8385.html</url>
      
        <content type="html"><![CDATA[<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><ol><li>Windows Terminal</li><li>Scoop</li><li>Powershell</li></ol><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><h2 id="安装NF字体"><a href="#安装NF字体" class="headerlink" title="安装NF字体"></a>安装NF字体</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加NF字体库</span></span><br><span class="line">scoop bucket add nerd<span class="literal">-fonts</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加字体（需要管理员权限）</span></span><br><span class="line">scoop install Meslo<span class="literal">-NF-Mono</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者执行下面的命令：先运行scoop install sudo 安装sudo</span></span><br><span class="line">sudo scoop install Meslo<span class="literal">-NF-Mono</span></span><br></pre></td></tr></table></figure><h2 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h2><p>配置 Windows Terminal，点击下拉菜单选择设置打开设置标签页，然后依次修改以下选项：</p><ol><li>启动 -&gt; 默认配置文件，改为 Powershell，如果你已经安装了 Powershell 7.2，这里应当可以自动搜索到。否则可能需要手动编辑配置文件。</li><li>启动 -&gt; 默认终端应用程序，改为 Windows Terminal。</li><li>外观 -&gt; 在选项卡中显示亚力克效果，选择启用。</li><li>配色方案，这里可以根据自己喜好调整。</li><li>配置文件默认值 -&gt; 外观 -&gt; 字体，改为 MesloLGS NF 字体，字号按照自己屏幕大小选择，再开启亚力克效果，透明度选择 70% 左右。</li></ol><h2 id="安装oh-my-posh"><a href="#安装oh-my-posh" class="headerlink" title="安装oh-my-posh"></a>安装oh-my-posh</h2><p>oh-my-posh 是一个 Powershell 的主题项目，可以将 Powershell 美化成类似 ohmyzsh 的效果。安装 oh-my-posh 也很简单，运行下面的命令即可。posh-git 是一个在提示符中显示 git 仓库信息的包，建议同时安装。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> posh<span class="literal">-git</span> <span class="literal">-Scope</span> CurrentUser</span><br><span class="line"><span class="built_in">Install-Module</span> <span class="built_in">oh</span><span class="literal">-my-posh</span> <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure><br>安装成功之后就可以在终端中显示主题了。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先需要加载oh-my-posh模块</span></span><br><span class="line"><span class="built_in">Import-Module</span> <span class="built_in">oh</span><span class="literal">-my-posh</span></span><br><span class="line"><span class="comment"># 然后指定一个主题</span></span><br><span class="line"><span class="built_in">Set-PoshPrompt</span> <span class="literal">-Theme</span> amro</span><br></pre></td></tr></table></figure><br>更多主题：<a href="https://ohmyposh.dev/docs/themes">https://ohmyposh.dev/docs/themes</a>。</p><h3 id="对所有终端生效"><a href="#对所有终端生效" class="headerlink" title="对所有终端生效"></a>对所有终端生效</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">code <span class="variable">$PROFILE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有安装vscode的话，可以使用记事本打开</span></span><br><span class="line">notepad <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure><p>添加以下命令<br><figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> <span class="built_in">oh</span><span class="literal">-my-posh</span></span><br><span class="line"><span class="built_in">Set-PoshPrompt</span> <span class="literal">-Theme</span> amro</span><br></pre></td></tr></table></figure></p><h2 id="安装图标"><a href="#安装图标" class="headerlink" title="安装图标"></a>安装图标</h2><p>Terminal-Icons 是一个为 Powershell 显示文件类型图标的 Powershell 模块，同样基于 nerd-fonts。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> <span class="literal">-Name</span> Terminal<span class="literal">-Icons</span> <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure><br>安装完毕后，在终端中导入模块，再运行一下 Show-TerminalIconsTheme 命令，就可以看到 Terminal-Icons 为文件类型显示图标的例子了。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> <span class="literal">-Name</span> Terminal<span class="literal">-Icons</span></span><br><span class="line"><span class="built_in">Show-TerminalIconsTheme</span></span><br></pre></td></tr></table></figure><br>为了让所有终端都能生效，应该将下面一行添加到 $PROFILE 中。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> <span class="literal">-Name</span> Terminal<span class="literal">-Icons</span></span><br></pre></td></tr></table></figure></p><h2 id="PSReadLine"><a href="#PSReadLine" class="headerlink" title="PSReadLine"></a>PSReadLine</h2><blockquote><p>想让 Powershell 也拥有提示和补全功能？</p></blockquote><h3 id="安装-PSReadLine"><a href="#安装-PSReadLine" class="headerlink" title="安装 PSReadLine"></a>安装 PSReadLine</h3><p>确保你使用的是 Powershell 7.2，然后运行下面的命令。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> PSReadLine <span class="literal">-AllowPrerelease</span> <span class="literal">-Force</span></span><br><span class="line"><span class="comment"># 或者你喜欢稳定版</span></span><br><span class="line"><span class="built_in">Install-Module</span> PSReadLine <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure></p><h3 id="使用-PSReadLine"><a href="#使用-PSReadLine" class="headerlink" title="使用 PSReadLine"></a>使用 PSReadLine</h3><p>要使用 PSReadLine，同样需要在 $PROFILE 中添加一些配置。如果想了解下面配置的意思，可以参考官方文档，<a href="https://docs.microsoft.com/en-us/powershell/module/psreadline/about/about_psreadline">https://docs.microsoft.com/en-us/powershell/module/psreadline/about/about_psreadline</a><br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> PSReadLine</span><br><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-EditMode</span> Emacs</span><br><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-PredictionSource</span> HistoryAndPlugin</span><br><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-PredictionViewStyle</span> ListView</span><br><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-BellStyle</span> None</span><br><span class="line"><span class="built_in">Set-PSReadLineKeyHandler</span> <span class="literal">-Chord</span> <span class="string">&#x27;Ctrl+d&#x27;</span> <span class="literal">-Function</span> DeleteChar</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Steam云挂卡</title>
      <link href="/post/eff3873c.html"/>
      <url>/post/eff3873c.html</url>
      
        <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ol><li>ASF：<a href="https://github.com/JustArchi/ArchiSteamFarm/releases">https://github.com/JustArchi/ArchiSteamFarm/releases </a></li><li>ASF机器人：<a href="https://justarchi.github.io/ArchiSteamFarm/#/bot">https://justarchi.github.io/ArchiSteamFarm/#/bot</a></li><li>一个可以正常访问steam的服务器，或者用自己的电脑挂卡</li><li>xshell或者其他可以访问服务器的ssh软件</li></ol><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h2><ol><li>添加微软产品的feed<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc</span><br></pre></td></tr></table></figure></li><li><p>添加yum安装源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c <span class="string">&#x27;echo -e &quot;[packages-microsoft-com-prod]\nname=packages-microsoft-com-prod \nbaseurl=https://packages.microsoft.com/yumrepos/microsoft-rhel7.3-prod\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc&quot; &gt; /etc/yum.repos.d/dotnetdev.repo&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这两步运行完不会有任何提示，如果第三步找不到dotnet请检查上面的命令有没有复制全。</p></li><li><p>安装 .Net Core 2.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br><span class="line">yum -y install libunwind libicu</span><br><span class="line">yum -y install dotnet-sdk-2.0.0</span><br></pre></td></tr></table></figure><p>这时候试一下 dotnet –vision 命令，如有回显版本即为安装完成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dotnet --version</span><br><span class="line">2.0.0</span><br></pre></td></tr></table></figure></li></ol><h2 id="下载ASF"><a href="#下载ASF" class="headerlink" title="下载ASF"></a>下载ASF</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://github.com/JustArchi/ArchiSteamFarm/releases/download/3.1.1.8/ASF-linux-x64.zip</span><br></pre></td></tr></table></figure><p>如果无法下载请用电脑下载到本地然后使用xftp传到你的服务器的/root文件夹</p><ol><li>解压ASF<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> asf</span><br><span class="line"><span class="built_in">mv</span> ASF-linux-x64.zip asf/ASF-linux-x64.zip</span><br><span class="line">yum -y install zip</span><br><span class="line"><span class="built_in">cd</span> asf</span><br><span class="line">unzip ASF-linux-x64.zip</span><br></pre></td></tr></table></figure></li><li>配置文件<br>生成地址：<a href="https://justarchinet.github.io/ASF-WebConfigGenerator/">https://justarchinet.github.io/ASF-WebConfigGenerator/</a><br>简单挂卡只需要填入配置文件名称，steam账号和登录密码。最后别忘了把enable勾上。<br>完了把配置文件下载到本地电脑然后上传到asf的config文件夹即可。如果有多个号可以填写多个配置文件都放到asf文件夹中，支持同时挂多个账号。</li></ol><h2 id="使用tmux后台运行ASF"><a href="#使用tmux后台运行ASF" class="headerlink" title="使用tmux后台运行ASF"></a>使用tmux后台运行ASF</h2><ol><li>安装tmux（centos6无法使用yum安装）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install tmux</span><br></pre></td></tr></table></figure></li><li>创建一个新的tmux窗口：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux new -s asf</span><br></pre></td></tr></table></figure></li><li>运行ASF：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> asf</span><br><span class="line"><span class="built_in">chmod</span> +x ArchiSteamFarm</span><br><span class="line">./ArchiSteamFarm</span><br></pre></td></tr></table></figure>如果需要在两个窗口之间切换，按下ctrl+b 松开后按方向键即可。退出请按下ctrl+b松开后按下d（不会打断后台运行）。如需要重新进入，使用命令 tmux a -t asf即可。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Linux服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的世界服务器搭建</title>
      <link href="/post/6cbae888.html"/>
      <url>/post/6cbae888.html</url>
      
        <content type="html"><![CDATA[<h1 id="我的服务器"><a href="#我的服务器" class="headerlink" title="我的服务器"></a>我的服务器</h1><ol><li>提供商：腾讯云</li><li>服务器配置：1G2核心，5M带宽，40G的SSD，CentOS8_x64</li></ol><h1 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h1><h2 id="更新系统："><a href="#更新系统：" class="headerlink" title="更新系统："></a>更新系统：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br></pre></td></tr></table></figure><h2 id="清理缓存："><a href="#清理缓存：" class="headerlink" title="清理缓存："></a>清理缓存：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><h2 id="安装wget："><a href="#安装wget：" class="headerlink" title="安装wget："></a>安装wget：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget</span><br></pre></td></tr></table></figure><h2 id="安装java："><a href="#安装java：" class="headerlink" title="安装java："></a>安装java：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install java-1.8.0-openjdk</span><br></pre></td></tr></table></figure><h2 id="验证Java："><a href="#验证Java：" class="headerlink" title="验证Java："></a>验证Java：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><h2 id="安装我的世界服务器："><a href="#安装我的世界服务器：" class="headerlink" title="安装我的世界服务器："></a>安装我的世界服务器：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget [https://launcher.mojang.com/v1/objects/35139deedbd5182953cf1caa23835da59ca3d7cd/server.jar](https://launcher.mojang.com/v1/objects/35139deedbd5182953cf1caa23835da59ca3d7cd/server.jar)</span><br></pre></td></tr></table></figure><h2 id="创建MC文件夹："><a href="#创建MC文件夹：" class="headerlink" title="创建MC文件夹："></a>创建MC文件夹：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mc</span><br></pre></td></tr></table></figure><h2 id="在MC文件夹下创建mc服务器文件夹："><a href="#在MC文件夹下创建mc服务器文件夹：" class="headerlink" title="在MC文件夹下创建mc服务器文件夹："></a>在MC文件夹下创建mc服务器文件夹：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mc/minecraftserver/</span><br></pre></td></tr></table></figure><h2 id="将MC服务器移到MC文件夹下："><a href="#将MC服务器移到MC文件夹下：" class="headerlink" title="将MC服务器移到MC文件夹下："></a>将MC服务器移到MC文件夹下：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /root/server.jar /mc/minecraftserver/</span><br></pre></td></tr></table></figure><h2 id="启动服务器："><a href="#启动服务器：" class="headerlink" title="启动服务器："></a>启动服务器：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo java -Xms1024m -Xmx3072m -jar /mc/minecraftserver/server.jar nogui</span><br></pre></td></tr></table></figure><p>打开Eula.txt文件，将false改为true</p><p>关闭正版验证</p><p>再次启动服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo java -Xms1024m -Xmx3072m -jar</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Linux服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建自己的笔记系统</title>
      <link href="/post/f55c5c0c.html"/>
      <url>/post/f55c5c0c.html</url>
      
        <content type="html"><![CDATA[<h1 id="为什么需要"><a href="#为什么需要" class="headerlink" title="为什么需要"></a>为什么需要</h1><p>利用Github的免费存储特性，变相的实现个人笔记的多端同步。而且，所有文件都在自己的存储之下，不会产生丢失和隐私的安全问题。</p><h1 id="怎么搭建"><a href="#怎么搭建" class="headerlink" title="怎么搭建"></a>怎么搭建</h1><h2 id="使用软件"><a href="#使用软件" class="headerlink" title="使用软件"></a>使用软件</h2><ol><li>Github Desktop：图形化的Github同步操作，简化使用Git命令行的复杂操作。</li><li>Github</li><li>PicGo：和Github搭配，建立个人图床。</li><li>Typora或者其他的Markdown编写软件</li></ol><h2 id="具体教程"><a href="#具体教程" class="headerlink" title="具体教程"></a>具体教程</h2><ol><li>建立自己的github私有仓库，进入github官网，在个人仓库页面，新建私人仓库。</li><li>克隆到本地，然后进入项目页面，克隆仓库到本地。</li><li>设置Typora</li><li>设置PicGo：<a href="/post/7a7c751b.html">点击查看</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建你自己的图床</title>
      <link href="/post/7a7c751b.html"/>
      <url>/post/7a7c751b.html</url>
      
        <content type="html"><![CDATA[<h1 id="为什么要搭建自己的图床"><a href="#为什么要搭建自己的图床" class="headerlink" title="为什么要搭建自己的图床"></a>为什么要搭建自己的图床</h1><p>在使用markdown写作时，很多时候需要上传图片，使用图床，可以一次上次，多次使用。</p><h1 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h1><h2 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h2><ol><li><a href="https://github.com/Molunerfinn/PicGo/releases">Picgo</a></li><li><a href="https://github.com">Github</a></li></ol><h1 id="搭建教程"><a href="#搭建教程" class="headerlink" title="搭建教程"></a>搭建教程</h1><h2 id="GitHub-配置"><a href="#GitHub-配置" class="headerlink" title="GitHub 配置"></a><strong>GitHub 配置</strong></h2><ol><li>初始化个人仓库 在 GitHub 上创建一个个人仓库，作为图床的仓库。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93.png" alt="https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93.png"></p><ol><li>创建token 依次点击settings -&gt; Developer settings -&gt; Personal access tokens</li></ol><p><img src="https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/toekn-settings.png" alt="https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/toekn-settings.png"></p><h2 id="PicGo-配置"><a href="#PicGo-配置" class="headerlink" title="PicGo 配置"></a><strong>PicGo 配置</strong></h2><ol><li>下载 PicGo下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases">点击我下载</a></li><li>配置 PicGo</li></ol><p><img src="https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210216232626.png" alt="https://cdn.jsdelivr.net/gh/AlbertYang0801/pic-bed@main/img/20210216232626.png"></p><ul><li>设定仓库名：账户名/仓库名</li><li>设定分支名：仓库主分支名称</li><li>设定Token：在 GitHub 生成的 Token<ul><li>填写及勾选相关信息，然后点击 Genetate token 即可；</li></ul></li></ul><p><img src="https://pic4.zhimg.com/80/v2-73d5ad9cf5ca397cb2015a69e16266a3_720w.jpg" alt="https://pic4.zhimg.com/80/v2-73d5ad9cf5ca397cb2015a69e16266a3_720w.jpg"></p><pre><code>- token 生成，注意它只会显示一次，所以你最好把它复制下来到你的备忘录存好，方便下次使用，否则下次有需要重新新建；</code></pre><p><img src="https://pic4.zhimg.com/80/v2-3044094ad71f2ec6b86aa3be0881fec7_720w.jpg" alt="https://pic4.zhimg.com/80/v2-3044094ad71f2ec6b86aa3be0881fec7_720w.jpg"></p><ul><li>指定存储路径：自定义，上传图片到仓库指定路径下，若没有该目录会自动创建。</li><li><p>设置自定义域名：</p><blockquote><p>作用是在图片上传后，PicGo会按照【自定义域名+存储路径+上传的图片名】的方式生成访问链接，放到粘贴板上<br>此处直接设置 jsDelivr 加速的访问地址；<br>推荐设置为：<a href="https://cdn.jsdelivr.net/gh/{用户名}/{仓库名}@{分支名}">https://cdn.jsdelivr.net/gh/{用户名}/{仓库名}@{分支名}</a><br>例如：<a href="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main">https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main</a></p></blockquote></li></ul><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p><img src="https://cdn.jsdelivr.net/gh/KLiuZero/TyporaImage@main//Grideapicgo.png" alt=""></p><p>转载说明：本文转自于：</p><ul><li><a href="http://topurl.cn/7zi">http://topurl.cn/7zi</a></li><li><a href="https://zhuanlan.zhihu.com/p/347342082">https://zhuanlan.zhihu.com/p/347342082</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Twitch掉包</title>
      <link href="/post/e6645ab.html"/>
      <url>/post/e6645ab.html</url>
      
        <content type="html"><![CDATA[<h1 id="什么是掉包"><a href="#什么是掉包" class="headerlink" title="什么是掉包"></a>什么是掉包</h1><p>掉包是外国直播平台twitch与游戏的开发商合作推出的一种奖励，即可以给游戏带来热度，有可以让直播平台的人数增多。绑定Twitch和游戏账号以后，观看指定直播间，只要看的时间足够久了，可以通过不同的时间来换取奖励。</p><h2 id="举例说明："><a href="#举例说明：" class="headerlink" title="举例说明："></a><strong>举例说明：</strong></h2><p>apex英雄前一阵也有掉包活动，玩家可以通过观看官方指定的几个直播间来获取时间，等到积累时间到达1个小时之后，便可以去换取加载界面的壁纸。</p><p>当然其他游戏也有许多掉包。比如PUBG 饥荒 永劫无间……..</p><h1 id="如何掉包"><a href="#如何掉包" class="headerlink" title="如何掉包"></a>如何掉包</h1><h2 id="需要工具：电脑-手机-Twitch账号-育碧账号（库中要有r6）加速器"><a href="#需要工具：电脑-手机-Twitch账号-育碧账号（库中要有r6）加速器" class="headerlink" title="需要工具：电脑/手机 Twitch账号 育碧账号（库中要有r6）加速器"></a><strong>需要工具：电脑/手机 Twitch账号 育碧账号（库中要有r6）加速器</strong></h2><h2 id="没有Twitch账号！！！！解决方法如下："><a href="#没有Twitch账号！！！！解决方法如下：" class="headerlink" title="没有Twitch账号！！！！解决方法如下："></a><strong>没有Twitch账号！！！！解决方法如下：</strong></h2><p>这边我用的是网页版，因为感觉比较方便，推荐大家使用网页版。</p><p> <strong>记得先用加速器加速twitch哦！！！</strong></p><p><a href="https://www.twitch.tv/">https://www.twitch.tv/</a></p><p>打开以后，目光向右上角看，有账号的点登录，没有账号的点注册，密码忘了的点登录再点忘记密码。</p><p>点击注册的会跳出来一个小窗口，该填的就填，填完邮箱它会发一个验证码给你（在你填的邮箱账户中），自己搞就行了，没有什么难度，还是比较简单的。</p><h2 id="敲黑板！！！！（重点）"><a href="#敲黑板！！！！（重点）" class="headerlink" title="敲黑板！！！！（重点）"></a><strong>敲黑板！！！！（重点）</strong></h2><p> <strong>邮箱必须验证，不然只能看直播，不能参与掉包，账号显示离线。</strong></p><h1 id="获得奖励"><a href="#获得奖励" class="headerlink" title="获得奖励"></a>获得奖励</h1><h2 id="绑定育碧账号："><a href="#绑定育碧账号：" class="headerlink" title="绑定育碧账号："></a><strong>绑定育碧账号：</strong></h2><p><a href="https://www.twitch.tv/settings/connections，点开之后网页运行着twitch，我这边识别到了，没识别到的填写twitch账号密码，然后再填写育碧账号和密码。">https://www.twitch.tv/settings/connections，点开之后网页运行着twitch，我这边识别到了，没识别到的填写twitch账号密码，然后再填写育碧账号和密码。</a></p><p>然后点Authorize（授权）</p><p>自行感觉，感觉成功了，就是成功了awa</p><p>然后回到Twitch刷新一下下</p><p><a href="https://www.twitch.tv/settings/connections">https://www.twitch.tv/settings/connections</a></p><p>右键空白处，刷新。</p><p>使劲向下翻，翻到育碧，自己看到成功了就是成功了。</p>]]></content>
      
      
      <categories>
          
          <category> Games </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oh-My-ZSH安装配置</title>
      <link href="/post/d05a7cb0.html"/>
      <url>/post/d05a7cb0.html</url>
      
        <content type="html"><![CDATA[<h1 id="Oh-My-Zsh-是什么"><a href="#Oh-My-Zsh-是什么" class="headerlink" title="Oh My Zsh 是什么"></a>Oh My Zsh 是什么</h1><ul><li><strong>Oh My Zsh</strong> 是一款社区驱动的命令行工具，正如它的主页上说的，<strong>Oh My Zsh</strong> 是一种生活方式。它基于 <strong>zsh</strong> 命令行，提供了主题配置，插件机制，已经内置的便捷操作。给我们一种全新的方式使用命令行。</li><li><strong>Oh My Zsh</strong> 是基于 <strong>zsh</strong> 命令行的一个扩展工具集，提供了丰富的扩展功能。</li><li>安装 <strong>Oh My Zsh</strong> 前提条件：必须已安装 <strong>zsh</strong></li></ul><h1 id="Zsh-是什么"><a href="#Zsh-是什么" class="headerlink" title="Zsh 是什么"></a>Zsh 是什么</h1><ul><li><p><strong>Zsh</strong> 是一款强大的虚拟终端，既是一个系统的虚拟终端，也可以作为一个脚本语言的交互解析器。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开终端，在终端上输入:</span></span><br><span class="line">zsh --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个命令来查看我们的电脑上是否安装了 Zsh # 端查询版本为： zsh 5.8 (x86_64-apple-darwin20.0)*</span></span><br></pre></td></tr></table></figure></li><li><p>终端查询版本为： <strong>zsh 5.7.1 (x86_64-apple-darwin18.2.0)</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看系统当前 shell</span></span><br><span class="line"><span class="built_in">cat</span> /etc/shells</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装-Oh-My-Zsh-方法"><a href="#安装-Oh-My-Zsh-方法" class="headerlink" title="安装 Oh My Zsh 方法"></a>安装 Oh My Zsh 方法</h2><ul><li><p><strong>可以通过 curl 或 wget 两种方式来安装，用一条命令即可安装。</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装zsh</span></span><br><span class="line">apt install zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换默认的shell为zsh=</span></span><br><span class="line">chsh -s /bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装oh-my-zsh</span></span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装失败可以使用这条命令</span></span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL [https://gitee.com/shmhlsy/oh-my-zsh-install.sh/raw/master/install.sh](https://gitee.com/shmhlsy/oh-my-zsh-install.sh/raw/master/install.sh)</span>)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载命令补全插件</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/zsh-users/zsh-autosuggestions <span class="variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</span><br><span class="line"></span><br><span class="line"><span class="comment"># zshrc配置文件中修改如下内容</span></span><br><span class="line">plugins=(git zsh-autosuggestions)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载zsh配置</span></span><br><span class="line">zsh</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装过程中输出如下："><a href="#安装过程中输出如下：" class="headerlink" title="安装过程中输出如下："></a>安装过程中输出如下：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">xxxx% sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh**)</span>**&quot;</span> </span><br><span class="line">Cloning Oh My Zsh...</span><br><span class="line">Cloning into <span class="string">&#x27;/Users/xxxx/.oh-my-zsh&#x27;</span>...</span><br><span class="line">remote: Counting objects: 831, <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (700/700), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 831 (delta 14), reused 775 (delta 10), pack-reused 0</span><br><span class="line">Receiving objects: 100% (831/831), 567.67 KiB | 75.00 KiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (14/14), <span class="keyword">done</span>.</span><br><span class="line">Looking <span class="keyword">for</span> an existing zsh config...</span><br><span class="line">Found ~/.zshrc. Backing up to ~/.zshrc.pre-oh-my-zsh</span><br><span class="line">Using the Oh My Zsh template file and adding it to ~/.zshrc</span><br><span class="line">             __                                     __   </span><br><span class="line">      ____  / /_     ____ ___  __  __   ____  _____/ /_  </span><br><span class="line">     / __ \/ __ \   / __ `__ \/ / / /  /_  / / ___/ __ \ </span><br><span class="line">    / /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / / </span><br><span class="line">    \____/_/ /_/  /_/ /_/ /_/\__, /    /___/____/_/ /_/  </span><br><span class="line">                            /____/                       ....is now installed!</span><br><span class="line">Please look over the ~/.zshrc file to select plugins, themes, and options.</span><br><span class="line">p.s. Follow us at https://twitter.com/ohmyzsh.</span><br><span class="line">p.p.s. Get stickers and t-shirts at http://shop.planetargon.com.</span><br></pre></td></tr></table></figure><h2 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h2><h3 id="设置固定主题"><a href="#设置固定主题" class="headerlink" title="设置固定主题"></a>设置固定主题</h3><ul><li><p><strong>安装完毕后，我们就可以使用了，先来简单配置一下，Oh My Zsh 提供了很多主题风格，我们可以根据自己的喜好，设置主题风格</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">open ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到 ZSH_THEME# robbyrussell 是默认的主题ZSH_THEME=&quot;robbyrussell&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ZSH_THEME=&quot;样式名称&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>保存这个文件文件，重新打开终端。</p></li></ul><h3 id="设置随机主题"><a href="#设置随机主题" class="headerlink" title="设置随机主题"></a>设置随机主题</h3><ul><li><strong>我们还可以随机设置主题：</strong></li><li><p>步骤同上</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=<span class="string">&quot;random&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="查看主题名称"><a href="#查看主题名称" class="headerlink" title="查看主题名称"></a>查看主题名称</h3><ul><li><strong>Oh My Zsh</strong> 默认自带了一些默认主题，存放在 <strong>~/.oh-my-zsh/themes</strong> 目录中。我们可以查看这些主题</li><li><p>终端输入：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/themes &amp;&amp; <span class="built_in">ls</span></span><br></pre></td></tr></table></figure></li></ul><p><a href="https://link.zhihu.com/?target=https%3A//github.com/robbyrussell/oh-my-zsh/wiki/Themes">查看更多主题样式：github.com/robbyrussell/oh-my-zsh/wiki/Themes</a></p><h2 id="卸载-Oh-My-Zsh"><a href="#卸载-Oh-My-Zsh" class="headerlink" title="卸载 Oh My Zsh"></a>卸载 Oh My Zsh</h2><ul><li>终端输入 ：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uninstall_oh_my_zsh</span><br><span class="line">Are you sure you want to remove Oh My Zsh? [y/N]  Y</span><br></pre></td></tr></table></figure><ul><li>终端提示信息：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Removing ~/.oh-my-zsh</span><br><span class="line">Looking <span class="keyword">for</span> original zsh config...</span><br><span class="line">Found ~/.zshrc.pre-oh-my-zsh -- Restoring to ~/.zshrc</span><br><span class="line">Found ~/.zshrc -- Renaming to ~/.zshrc.omz-uninstalled-20170820200007</span><br><span class="line">Your original zsh config was restored. Please restart your session.</span><br><span class="line">Thanks <span class="keyword">for</span> trying out Oh My Zsh. It<span class="string">&#x27;s been uninstalled.</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Linux发行版 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下nodejs的安装与配置</title>
      <link href="/post/104491d3.html"/>
      <url>/post/104491d3.html</url>
      
        <content type="html"><![CDATA[<h1 id="Nodejs"><a href="#Nodejs" class="headerlink" title="Nodejs"></a>Nodejs</h1><h2 id="什么是Nodejs"><a href="#什么是Nodejs" class="headerlink" title="什么是Nodejs"></a>什么是Nodejs</h2><p>Node.js 是一个开源和跨平台的 JavaScript 运行时环境。 它几乎是任何类型项目的流行工具！</p><p>Node.js 在浏览器之外运行 V8 JavaScript 引擎（Google Chrome 的内核）。 这使得 Node.js 的性能非常好。</p><p>Node.js 应用程序在单个进程中运行，无需为每个请求创建新的线程。 Node.js 在其标准库中提供了一组异步的 I/O 原语，以防止 JavaScript 代码阻塞，通常，Node.js 中的库是使用非阻塞范式编写的，使得阻塞行为成为异常而不是常态。</p><p>当 Node.js 执行 I/O 操作时（比如从网络读取、访问数据库或文件系统），Node.js 将在响应返回时恢复操作（而不是阻塞线程和浪费 CPU 周期等待）。</p><p>这允许 Node.js 使用单个服务器处理数千个并发连接，而​​不会引入管理线程并发（这可能是错误的重要来源）的负担。</p><p>Node.js 具有独特的优势，因为数百万为浏览器编写 JavaScript 的前端开发者现在无需学习完全不同的语言，就可以编写除客户端代码之外的服务器端代码。</p><p>在 Node.js 中，可以毫无问题地使用新的 ECMAScript 标准，因为你不必等待所有用户更新他们的浏览器，你负责通过更改 Node.js 版本来决定使用哪个 ECMAScript 版本，你还可以通过运行带有标志的 Node.js 来启用特定的实验性功能。</p><h2 id="使用nvm安装Nodejs并进行版本管理"><a href="#使用nvm安装Nodejs并进行版本管理" class="headerlink" title="使用nvm安装Nodejs并进行版本管理"></a>使用nvm安装Nodejs并进行版本管理</h2><h3 id="windows系统下的nvm-安装"><a href="#windows系统下的nvm-安装" class="headerlink" title="windows系统下的nvm 安装"></a>windows系统下的nvm 安装</h3><ol><li>下载<br>链接：<a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a><br>可下载以下版本：</li></ol><p>nvm-noinstall.zip：绿色免安装版，但使用时需要进行配置。</p><p>nvm-setup.zip：安装版，推荐使用</p><ol><li>安装（nvm-setup)<br>双击解压后的文件nvm-setup.exe</li></ol><p><img src="https://upload-images.jianshu.io/upload_images/3143447-18dde214f03c838c.png?imageMogr2/auto-orient/strip|imageView2/2/w/503/format/webp" alt=""></p><p>选择nvm安装路径</p><p><img src="https://upload-images.jianshu.io/upload_images/3143447-0dfa65a973b0b292.png?imageMogr2/auto-orient/strip|imageView2/2/w/503/format/webp" alt=""></p><blockquote><p>文件夹名不要出现 中文 和 空格。</p></blockquote><p>选择nodejs安装路径</p><p><img src="https://upload-images.jianshu.io/upload_images/3143447-9a0e3eb6f1dc00c1.png?imageMogr2/auto-orient/strip|imageView2/2/w/503/format/webp" alt=""></p><p>确认安装</p><p><img src="https://upload-images.jianshu.io/upload_images/3143447-720b87d16f85a331.png?imageMogr2/auto-orient/strip|imageView2/2/w/503/format/webp" alt=""></p><p>5.检查是否安装成功</p><p>打开CMD，输入nvm，安装成功则会如下图所示，它会显示出当前nvm版本以及nvm的命令：</p><p><img src="https://upload-images.jianshu.io/upload_images/3143447-b159a5689f1001da.png?imageMogr2/auto-orient/strip|imageView2/2/w/1142/format/webp" alt=""></p><h3 id="使用NVM"><a href="#使用NVM" class="headerlink" title="使用NVM"></a>使用NVM</h3><ol><li>使用nvm<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nvm list 命令 - 显示版本列表</span><br><span class="line">nvm list // 显示已安装的版本（同 nvm list installed）</span><br><span class="line">nvm list installed // 显示已安装的版本</span><br><span class="line">nvm list available // 显示所有可以下载的版本</span><br><span class="line">nvm install 命令 - 安装指定版本nodejs</span><br><span class="line">nvm install 14.5.0 // 安装14.5.0版本node</span><br><span class="line">nvm install latest // 安装最新版本node</span><br><span class="line">nvm use 命令 - 使用指定版本node</span><br><span class="line">nvm use 14.5.0 // 使用14.5.0版本node</span><br><span class="line">nvm uninstall 命令 - 卸载指定版本 node</span><br><span class="line">nvm uninstall 14.5.0 // 卸载14.5.0版本node</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>在运行nvm install 的时候，有可能会出现无权限安装的问题，如果遇到此问题，请 以管理员身份运行 cmd。</p></blockquote><ol><li>其他命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">arch</span> ：显示node是运行在32位还是64位系统上的</span><br><span class="line">nvm on ：开启nodejs版本管理</span><br><span class="line">nvm off ：关闭nodejs版本管理</span><br><span class="line">nvm proxy [url] ：设置下载代理。不加可选参数url，显示当前代理。将url设置为none则移除代理。</span><br><span class="line">nvm node_mirror [url] ：设置node镜像。默认是https://nodejs.org/dist/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。</span><br><span class="line">nvm npm_mirror [url] ：设置npm镜像。https://github.com/npm/cli/archive/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。</span><br><span class="line">nvm root [path] ：设置存储不同版本node的目录。如果未设置，默认使用当前目录。</span><br><span class="line">nvm version ：显示nvm版本。version可简化为v。</span><br></pre></td></tr></table></figure><h2 id="nodejs的配置"><a href="#nodejs的配置" class="headerlink" title="nodejs的配置"></a>nodejs的配置</h2></li></ol><blockquote><p>主要配置的是npm安装的全局模块所在的路径，以及缓存cache的路径，之所以要配置，是因为以后在执行类似：npm install express [-g] （后面的可选参数-g，g代表global全局安装的意思）的安装语句时，会将安装的模块安装到【C:\Users\用户名\AppData\Roaming\npm】路径中，占C盘空间。</p></blockquote><ol><li><p>在D盘创建两个空文件夹，node_global；node_cache</p></li><li><p>创建完两个空文件夹之后，打开cmd命令窗口，输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;D:\Develop\nodejs\node_global&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;D:\Develop\nodejs\node_cache&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>接下来设置环境变量，关闭cmd窗口，“我的电脑”-右键-“属性”-“高级系统设置”-“高级”-“环境变量”</p></li><li><p>进入环境变量对话框，在【系统变量】下修改【PATH】，输入【D:\Develop\nodejs\node_global\node_modules】</p></li></ol><h1 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h1><h2 id="什么是yarn"><a href="#什么是yarn" class="headerlink" title="什么是yarn"></a>什么是yarn</h2><p>Yarn 对你的代码来说是一个包管理器，就相当于npm。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>下载node.js，使用npm安装<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> yarn</span><br><span class="line"><span class="comment"># 查看版本：</span></span><br><span class="line">yarn <span class="literal">--version</span></span><br></pre></td></tr></table></figure></li><li>下载yarn的安装程序:<br><a href="https://classic.yarnpkg.com/latest.msi">yarn下载</a><br>提供一个.msi文件，在运行时将引导您在Windows上安装Yarn</li></ol><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ol><li><p>控制台输入命令, 正常显示版本表示安装成功</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> yarn <span class="literal">-v</span><span class="comment"># 查看yarn版本查看yarn的所有配置</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span> yarn config list<span class="comment"># 查看yarn配置</span></span><br></pre></td></tr></table></figure></li><li><p>修改yarn的源镜像为淘宝源</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> yarn config <span class="built_in">set</span> registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure></li><li><p>修改全局安装目录, 先创建好目录(global), 我放在了Yarn安装目录下(D:\RTE\Yarn\global)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> yarn config <span class="built_in">set</span> global<span class="literal">-folder</span> <span class="string">&quot;D:\RTE\Yarn\global&quot;</span><span class="comment"># 具体目录请改成自己的</span></span><br></pre></td></tr></table></figure></li><li><p>修改全局安装目录的bin目录位置, bin目录需要自己创建, 而且需要把此目录加到系统环境变量(D:\RTE\Yarn\global\bin)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> yarn config <span class="built_in">set</span> prefix <span class="string">&quot;D:\RTE\Yarn\global\&quot;</span><span class="comment"># 会自动设置成*\global\bin </span></span><br></pre></td></tr></table></figure></li><li><p>修改全局缓存目录, 先创建好目录(cache), 和global放在同一层目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> yarn config <span class="built_in">set</span> cache<span class="literal">-folder</span> <span class="string">&quot;D:\RTE\Yarn\cache&quot;</span><span class="comment"># 具体目录请改成自己的</span></span><br></pre></td></tr></table></figure></li><li><p>查看所有配置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> yarn config list</span><br></pre></td></tr></table></figure></li><li><p>查看当前yarn的bin的位置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> yarn global bin</span><br></pre></td></tr></table></figure></li><li><p>查看当前yarn的全局安装位置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> yarn global <span class="built_in">dir</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Windows的Powershell内使用Vim</title>
      <link href="/post/4c546cfb.html"/>
      <url>/post/4c546cfb.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装Gvim"><a href="#安装Gvim" class="headerlink" title="安装Gvim"></a>安装Gvim</h1><ol><li>首先下载<a href="https://link.zhihu.com/?target=https%3A//www.vim.org/download.php%23pc"><strong><em>点我下载</em></strong></a>GVim安装包，然后按照屏幕提示进行安装。</li><li>建议安装Vim的完整特性（包括创建用于命令行的.bat文件）</li><li>安装完成之后，即可以从开始菜单启动Vim</li></ol><h1 id="配置Powershell"><a href="#配置Powershell" class="headerlink" title="配置Powershell"></a>配置Powershell</h1><ol><li><p>以管理员的身份运行PowerShell<br>执行以下命令，在对话框中选择Y：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned</span><br></pre></td></tr></table></figure></li><li><p>在C:\Windows\System32\WindowsPowerShell\v1.0目录下新建Microsoft.PowerShell_profile.ps1文件<br>   可以使用记事本打开此Microsoft.PowerShell_profile.ps1文件进行编辑<br>   写入以下内容</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set-alias</span> vim <span class="string">&quot;D:vimvim82vimexe&quot;</span> <span class="comment"># 此处为vim的安装路径</span></span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">Function</span> <span class="title">Edit-Profile</span></span></span><br><span class="line">&#123;</span><br><span class="line"> vim <span class="variable">$profile</span></span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">Function</span> <span class="title">Edit-Vimrc</span></span></span><br><span class="line">&#123;</span><br><span class="line"> vim <span class="variable">$HOME</span>\_vimrc</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="配置vimrc文件"><a href="#配置vimrc文件" class="headerlink" title="配置vimrc文件"></a>配置vimrc文件</h1><p>在使用vim编辑文件后，总是会有一个以<code>.un~</code>结尾的文件自动生成,每次修改完有个<code>.~</code>文件自动生成。其实这是vim的undofile和备份文件，可以让你在关闭文件后再次打开时还可以撤销上次的更改，找到你的vim配置文件，在里面添加一段代码即可取消。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> noundofile</span><br><span class="line"><span class="built_in">set</span> nobackup</span><br><span class="line"><span class="built_in">set</span> noswapfile</span><br></pre></td></tr></table></figure><p>如果配置文件里有</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> undofile</span><br><span class="line"><span class="built_in">set</span> backup</span><br><span class="line"><span class="built_in">set</span> swapfile</span><br></pre></td></tr></table></figure><p>将其替换即可</p><p>如果想使用这个功能的话，但是不想被那些文件烦的话，还可以写入，就可以把这些文件放在一起了</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">undodir=~/.undodir</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Proxychains4使用教程</title>
      <link href="/post/eb0f0ec8.html"/>
      <url>/post/eb0f0ec8.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>注意事项：<br>使用前请确定拥有一个能正常代理的服务器。</p></blockquote><h1 id="卸载原来的proxychains"><a href="#卸载原来的proxychains" class="headerlink" title="卸载原来的proxychains"></a>卸载原来的proxychains</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># autoremove</span></span><br><span class="line">apt autoremove proxychains</span><br></pre></td></tr></table></figure><p>删除proxychains.conf的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">rm</span> -rf /proxychains.conf</span><br></pre></td></tr></table></figure><h1 id="安装最新的proxychains-ng"><a href="#安装最新的proxychains-ng" class="headerlink" title="安装最新的proxychains-ng"></a>安装最新的proxychains-ng</h1><h2 id="源码编译安装"><a href="#源码编译安装" class="headerlink" title="源码编译安装"></a>源码编译安装</h2><p>下载源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/rofl0r/proxychains-ng.git</span><br></pre></td></tr></table></figure><p>编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> proxychains-ng/</span><br><span class="line"></span><br><span class="line">./comfigure --prefix=/usr --sysconfdir=/etc</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">make install-config</span><br></pre></td></tr></table></figure><h2 id="包安装"><a href="#包安装" class="headerlink" title="包安装"></a>包安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt search proxychains4</span><br><span class="line"></span><br><span class="line">apt install proxychains4</span><br></pre></td></tr></table></figure><h1 id="proxychains使用"><a href="#proxychains使用" class="headerlink" title="proxychains使用"></a>proxychains使用</h1><p>使用前首先要有个已经启用VPN代理转发并且顺畅的端口，比如1080端口，然后修改proxychains的代理文件，默认目录是/etc/proxychains4.conf文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># proxychains.conf  VER 4.x</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#        HTTP, SOCKS4a, SOCKS5 tunneling proxifier with DNS.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The option below identifies how the ProxyList is treated.</span></span><br><span class="line"><span class="comment"># only one option should be uncommented at time,</span></span><br><span class="line"><span class="comment"># otherwise the last appearing option will be accepted</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#dynamic_chain</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Dynamic - Each connection will be done via chained proxies</span></span><br><span class="line"><span class="comment"># all proxies chained in the order as they appear in the list</span></span><br><span class="line"><span class="comment"># at least one proxy must be online to play in chain</span></span><br><span class="line"><span class="comment"># (dead proxies are skipped)</span></span><br><span class="line"><span class="comment"># otherwise EINTR is returned to the app</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">strict_chain</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Strict - Each connection will be done via chained proxies</span></span><br><span class="line"><span class="comment"># all proxies chained in the order as they appear in the list</span></span><br><span class="line"><span class="comment"># all proxies must be online to play in chain</span></span><br><span class="line"><span class="comment"># otherwise EINTR is returned to the app</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#round_robin_chain</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Round Robin - Each connection will be done via chained proxies</span></span><br><span class="line"><span class="comment"># of chain_len length</span></span><br><span class="line"><span class="comment"># all proxies chained in the order as they appear in the list</span></span><br><span class="line"><span class="comment"># at least one proxy must be online to play in chain</span></span><br><span class="line"><span class="comment"># (dead proxies are skipped).</span></span><br><span class="line"><span class="comment"># the start of the current proxy chain is the proxy after the last</span></span><br><span class="line"><span class="comment"># proxy in the previously invoked proxy chain.</span></span><br><span class="line"><span class="comment"># if the end of the proxy chain is reached while looking for proxies</span></span><br><span class="line"><span class="comment"># start at the beginning again.</span></span><br><span class="line"><span class="comment"># otherwise EINTR is returned to the app</span></span><br><span class="line"><span class="comment"># These semantics are not guaranteed in a multithreaded environment.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#random_chain</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Random - Each connection will be done via random proxy</span></span><br><span class="line"><span class="comment"># (or proxy chain, see  chain_len) from the list.</span></span><br><span class="line"><span class="comment"># this option is good to test your IDS :)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Make sense only if random_chain or round_robin_chain</span></span><br><span class="line"><span class="comment">#chain_len = 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Quiet mode (no output from library)</span></span><br><span class="line"><span class="comment">#quiet_mode</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Proxy DNS requests - no leak for DNS data</span></span><br><span class="line">proxy_dns </span><br><span class="line"></span><br><span class="line"><span class="comment"># set the class A subnet number to use for the internal remote DNS mapping</span></span><br><span class="line"><span class="comment"># we use the reserved 224.x.x.x range by default,</span></span><br><span class="line"><span class="comment"># if the proxified app does a DNS request, we will return an IP from that range.</span></span><br><span class="line"><span class="comment"># on further accesses to this ip we will send the saved DNS name to the proxy.</span></span><br><span class="line"><span class="comment"># in case some control-freak app checks the returned ip, and denies to </span></span><br><span class="line"><span class="comment"># connect, you can use another subnet, e.g. 10.x.x.x or 127.x.x.x.</span></span><br><span class="line"><span class="comment"># of course you should make sure that the proxified app does not need</span></span><br><span class="line"><span class="comment"># *real* access to this subnet. </span></span><br><span class="line"><span class="comment"># i.e. dont use the same subnet then in the localnet section</span></span><br><span class="line"><span class="comment">#remote_dns_subnet 127 </span></span><br><span class="line"><span class="comment">#remote_dns_subnet 10</span></span><br><span class="line">remote_dns_subnet 224</span><br><span class="line"></span><br><span class="line"><span class="comment"># Some timeouts in milliseconds</span></span><br><span class="line">tcp_read_time_out 15000</span><br><span class="line">tcp_connect_time_out 8000</span><br><span class="line"></span><br><span class="line"><span class="comment">### Examples for localnet exclusion</span></span><br><span class="line"><span class="comment">## localnet ranges will *not* use a proxy to connect.</span></span><br><span class="line"><span class="comment">## Exclude connections to 192.168.1.0/24 with port 80</span></span><br><span class="line"><span class="comment"># localnet 192.168.1.0:80/255.255.255.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Exclude connections to 192.168.100.0/24</span></span><br><span class="line"><span class="comment"># localnet 192.168.100.0/255.255.255.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Exclude connections to ANYwhere with port 80</span></span><br><span class="line"><span class="comment"># localnet 0.0.0.0:80/0.0.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## RFC5735 Loopback address range</span></span><br><span class="line"><span class="comment">## if you enable this, you have to make sure remote_dns_subnet is not 127</span></span><br><span class="line"><span class="comment">## you&#x27;ll need to enable it if you want to use an application that </span></span><br><span class="line"><span class="comment">## connects to localhost.</span></span><br><span class="line"><span class="comment"># localnet 127.0.0.0/255.0.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## RFC1918 Private Address Ranges</span></span><br><span class="line"><span class="comment"># localnet 10.0.0.0/255.0.0.0</span></span><br><span class="line"><span class="comment"># localnet 172.16.0.0/255.240.0.0</span></span><br><span class="line"><span class="comment"># localnet 192.168.0.0/255.255.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ProxyList format</span></span><br><span class="line"><span class="comment">#       type  ip  port [user pass]</span></span><br><span class="line"><span class="comment">#       (values separated by &#x27;tab&#x27; or &#x27;blank&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       only numeric ipv4 addresses are valid</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#        Examples:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       socks5    192.168.67.78    1080    lamer    secret</span></span><br><span class="line"><span class="comment">#        http    192.168.89.3    8080    justu    hidden</span></span><br><span class="line"><span class="comment">#         socks4    192.168.1.49    1080</span></span><br><span class="line"><span class="comment">#        http    192.168.39.93    8080    </span></span><br><span class="line"><span class="comment">#        </span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       proxy types: http, socks4, socks5</span></span><br><span class="line"><span class="comment">#        ( auth types supported: &quot;basic&quot;-http  &quot;user/pass&quot;-socks )</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[ProxyList]</span><br><span class="line"><span class="comment"># add proxy here ...</span></span><br><span class="line"><span class="comment"># meanwile</span></span><br><span class="line"><span class="comment"># defaults set to &quot;tor&quot;</span></span><br><span class="line">socks4     127.0.0.1 9050</span><br></pre></td></tr></table></figure><p>直接在文件底部修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[ProxyList]</span><br><span class="line"><span class="comment"># add proxy here ...</span></span><br><span class="line"><span class="comment"># meanwile</span></span><br><span class="line"><span class="comment"># defaults set to &quot;tor&quot;</span></span><br><span class="line"><span class="comment">#socks4      127.0.0.1 9050</span></span><br><span class="line">socks5    127.0.0.1 1089</span><br><span class="line">http      127.0.0.1 8889    </span><br><span class="line"><span class="comment">#最后的端口号根据自己的vpn转发的端口填写，这里填写的是我自己的端口号</span></span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 + 命令</span><br><span class="line"></span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line"><span class="comment"># proxychains4 firefox www.youtube.com</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Linux发行版 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scoop的安装与配置</title>
      <link href="/post/5adfd2e1.html"/>
      <url>/post/5adfd2e1.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="什么是scoop"><a href="#什么是scoop" class="headerlink" title="什么是scoop"></a>什么是scoop</h1><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>scoop——Windows下的包管理系统<br>包管理器介绍<br><a href="https://linux.cn/article-12713-1.html">技术|Linux 黑话解释：什么是包管理器？它是如何工作的？</a></p></div><h1 id="为什么要使用scoop"><a href="#为什么要使用scoop" class="headerlink" title="为什么要使用scoop"></a>为什么要使用scoop</h1><p>Scoop 等一系列包管理器的诞生，第一大便利就是省去了上述繁琐的「搜索 - 下载 - 安装」的步骤，让我们能够通过「一行代码」急速安装。</p><p>同时，用 Scoop 来安装和管理我们的软件：</p><ul><li>集搜索、下载、安装、更新软件于一体：极大的降低了安装维护一个软件的成本，我们甚至不必在软件本身的复杂菜单中寻找那个更新按钮来更新软件自己</li><li>将软件干干净净的安装到电脑的「<a href="https://www.zhihu.com/search?q=%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E5%A4%B9&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A54822449%7D">用户文件夹</a>」下：这样既不会污染路径也不会请求不必要的权限（UAC）</li><li>在卸载软件的时候，能够尽量清空软件在电脑上存储的任何数据和痕迹</li></ul><p>特别的，Scoop 最适合安装那种干净、小巧、开源的软件。并且，Scoop 也极度适合为开发者配置开发环境。</p><h1 id="scoop的安装"><a href="#scoop的安装" class="headerlink" title="scoop的安装"></a>scoop的安装</h1><h2 id="环境需求："><a href="#环境需求：" class="headerlink" title="环境需求："></a>环境需求：</h2><ul><li>Windows 版本不低于 Windows 7</li><li>Windows 中的 PowerShell 版本不低于 PowerShell 3</li><li>你能 <strong>正常、快速</strong> 的访问 GitHub 并下载上面的资源</li><li>你的 Windows 用户名为英文（Windows 用户环境变量中路径值不支持中文字符）</li></ul><h2 id="Scoop安装："><a href="#Scoop安装：" class="headerlink" title="Scoop安装："></a>Scoop安装：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</span><br></pre></td></tr></table></figure><h2 id="将Scoop安装到自定义目录："><a href="#将Scoop安装到自定义目录：" class="headerlink" title="将Scoop安装到自定义目录："></a>将Scoop安装到自定义目录：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env</span>:SCOOP=<span class="string">&#x27;D:\\Scoop&#x27;</span></span><br><span class="line">[Environment]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP&#x27;</span>, <span class="variable">$env</span>:SCOOP, <span class="string">&#x27;User&#x27;</span>)</span><br><span class="line"></span><br><span class="line">将Scoop配置为将全局程序安装到自定义目录 SCOOP_GLOBAL(命令行方式)</span><br><span class="line"></span><br><span class="line"><span class="variable">$env</span>:SCOOP_GLOBAL=<span class="string">&#x27;D:\\GlobalScoopApps&#x27;</span></span><br><span class="line">[Environment]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP_GLOBAL&#x27;</span>, <span class="variable">$env</span>:SCOOP_GLOBAL, <span class="string">&#x27;Machine&#x27;</span>)</span><br><span class="line"></span><br><span class="line">iwr -useb get.scoop.sh | iex</span><br></pre></td></tr></table></figure><h2 id="验证："><a href="#验证：" class="headerlink" title="验证："></a>验证：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop <span class="built_in">help</span></span><br></pre></td></tr></table></figure><h2 id="卸载："><a href="#卸载：" class="headerlink" title="卸载："></a>卸载：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop uninstall scoop</span><br></pre></td></tr></table></figure><h2 id="bucket安装："><a href="#bucket安装：" class="headerlink" title="bucket安装："></a>bucket安装：</h2><ul><li>main包</li><li>extras包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop bucket add extras</span><br></pre></td></tr></table></figure><ul><li>java包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop bucket add java</span><br></pre></td></tr></table></figure><ul><li>jetbrains包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop bucket add jetbrains</span><br></pre></td></tr></table></figure><ul><li>其他包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scoop bucket add dorado https://github.com/h404bi/dorado</span><br><span class="line"></span><br><span class="line">scoop bucket add spoon https://github.com/FDUZS/spoon.git</span><br><span class="line"></span><br><span class="line">scoop bucket add Ash258 https://github.com/Ash258/Scoop-Ash258.git</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scoop bucket add main <span class="string">&#x27;https://github.com.cnpmjs.org/ScoopInstaller/Main&#x27;</span></span><br><span class="line">scoop bucket add extras <span class="string">&#x27;https://github.com.cnpmjs.org/lukesampson/scoop-extras&#x27;</span></span><br><span class="line">scoop bucket add versions <span class="string">&#x27;https://github.com.cnpmjs.org/ScoopInstaller/Versions&#x27;</span></span><br><span class="line">scoop bucket add jetbrains <span class="string">&#x27;https://github.com.cnpmjs.org/Ash258/Scoop-JetBrains&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="安装软件介绍："><a href="#安装软件介绍：" class="headerlink" title="安装软件介绍："></a>安装软件介绍：</h2><p><img src="https://gitee.com/foreverloveljj/notion-image/raw/master/img/ScoopSoftware.png" alt="https://gitee.com/foreverloveljj/notion-image/raw/master/img/ScoopSoftware.png"></p><h2 id="scoop使用命令"><a href="#scoop使用命令" class="headerlink" title="scoop使用命令"></a>scoop使用命令</h2><ol><li>常用命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">scoop <span class="built_in">help</span> <span class="comment">#查看帮助</span></span><br><span class="line">scoop <span class="built_in">help</span> &lt;某个命令&gt; <span class="comment"># 具体查看某个命令的帮助</span></span><br><span class="line"></span><br><span class="line">scoop install &lt;app&gt;   <span class="comment"># 安装 APP</span></span><br><span class="line">scoop uinstall &lt;app&gt;  <span class="comment"># 卸载 APP</span></span><br><span class="line"></span><br><span class="line">scoop list  <span class="comment"># 列出已安装的 APP</span></span><br><span class="line">scoop search <span class="comment"># 搜索 APP</span></span><br><span class="line">scoop status <span class="comment"># 检查哪些软件有更新</span></span><br><span class="line"></span><br><span class="line">scoop update <span class="comment"># 更新 Scoop 自身</span></span><br><span class="line">scoop update appName1 appName2 <span class="comment"># 更新某些app</span></span><br><span class="line">scoop update *  <span class="comment"># 更新所有 app （前提是需要在apps目录下操作）</span></span><br><span class="line"></span><br><span class="line">scoop bucket known <span class="comment">#通过此命令列出已知所有 bucket（软件源）</span></span><br><span class="line">scoop bucket add bucketName <span class="comment">#添加某个 bucket</span></span><br><span class="line"></span><br><span class="line">scoop cache <span class="built_in">rm</span> &lt;app&gt; <span class="comment"># 移除某个app的缓存</span></span><br></pre></td></tr></table></figure><ol><li>安装卸载软件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装之前，通过 search 搜索 APP, 确定软件名称</span></span><br><span class="line">scoop search  xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 APP</span></span><br><span class="line">scoop install AppName</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装特定版本的 APP；语法 AppName@[version]，示例</span></span><br><span class="line">scoop install git@2.23.0.windows.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载 APP </span></span><br><span class="line">scoop uninstall <span class="comment">#卸载 APP</span></span><br></pre></td></tr></table></figure><ol><li>更新软件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">scoop update <span class="comment"># 更新 Scoop 自身</span></span><br><span class="line"></span><br><span class="line">scoop update appName1 appName2 <span class="comment"># 更新某些app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新所有 app （可能需要在apps目录下操作）</span></span><br><span class="line">scoop update *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁止某程序更新</span></span><br><span class="line">scoop hold &lt;app&gt;</span><br><span class="line"><span class="comment"># 允许某程序更新</span></span><br><span class="line">scoop unhold &lt;app&gt;</span><br></pre></td></tr></table></figure><ol><li>清除缓存与旧版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有以下载的缓存信息</span></span><br><span class="line">scoop cache show</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除指定程序的下载缓存</span></span><br><span class="line">scoop cache <span class="built_in">rm</span> &lt;app&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除所有缓存</span></span><br><span class="line">scoop cache <span class="built_in">rm</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除某软件的旧版本</span></span><br><span class="line">scoop cleanup &lt;app&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除全局安装的某软件的旧版本</span></span><br><span class="line">scoop cleanup &lt;app&gt; -g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除过期的下载缓存</span></span><br><span class="line">scoop cleanup &lt;app&gt; -k</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/post/d87f7e0c.html"/>
      <url>/post/d87f7e0c.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="988483826815dda52d41d188ddc7bdbebcb5a9be762bfcf062fddea50392c006">947161b1da898b84a4f1e25893ec63755832f5a5285ca934cc6ea7d7a3376aecb9f09322e772097e99c1df8a79f499f097daddb8dd0123e3d5d56c7637d037dd87e065ddc07cc14e8b7a180a6e3cc70e87378c20189ba4fa64d531a240f72ddbfdf8ce169ad07b2f56263e94a014b01e9b381253e5a9b488c38ca7e17dd773316ae2a185dc1d846c40555f9b3dedcccf5bff425e5f5c6aa9a317eb4b196e387c4c68bdc36cbda1dc23730055c2e8c2b6887b6a6956fdf50da3135e9752bba3745f09eafbec9ae4fcf209ebfc9b94ba0297d514720c3c80311348a08b1022e86b7e71387191c933dec43cd46e07636a93d05b437f5e8adcb37ea5fbd1af24d0ae85193888a0bd99f07b3f0551afc450c284f2eec55a7265761e214b03b42cdd33232458d20c508c85c031ca3f86a6428e97aca88460d5255ce2879242b27a59b4755761d7b5627d671005f66244b2625e773bc57645f162c20413e1d7157fba3ba21ce46b13de8270ee1ed71738037dc52d14c62945d865d3eac4139d69a3967fd5403a06ff3cd4916a5d958fd073fbf8a7b83d6042857e68ba3cff4deb6932041b7aa74135a622ad9d39a5b7c2781164a0342b538bb58838ac36a4c72d91c74d9005eab771a893d9c92d0f60cb2f365f1cf5a832cc4729452e3ddfd7f5e4e1e3acf4a0c2fbaf83120dadab8841f20da3423d18d14d51dd9a42aaf23121d24f64609b34f491d6fdb5dd11d5b8118c186e7fe8d003b2be20a0634cc0fe4eaaff8a6bc31aae230647e2889343b589f9dc0ea7f461ce47ea3001737b756d31ce4739e364609931867bc276e4e57cfb37569b13433c93755beac86eaa86bbb5008488e15d169e7d8061042fcad4d72a28b3c0c77f2cf82bf5ac762ef45768e889b9555e009bdb79ad794f1ba35352a17011a060c4cae257e1dcae964729b85b1c4c06c4b30817f905144f869d4e9aab58d75879babd6ab4a6798c64690ce8f53697cb9955da868f74aa9788e609afaf7e155d216d3670238375afd72c67b06a9d2b559fd78ab19cd5faa37b1e4a34e95800acc5584ea23df1edf759535fe979d745638acd26d58a07257aaf9622cd7cae24be51438c7aa499fd0363b5eba299431c009241fbc6d33fb0772a100a0dd485a357a97f33848e77d48259b226187829735a53536b06d68766a4f760b8c8e62cbe3ecc5cbfab1ac526c91423be07cbadf50441a2ecc281b426ddc741f4a4077c919059101d0a364eb2cd2a7d12b48d04bb8c740f9dcaa469ae613237ca09cfacddf59d0335b462f9f6d1dedbbae274aae59316ef62fffbf52ae3b6c59c1d126c36cf294a938a33fcd0d3b930d72ebec5b5c159750a1f21f2726330ba7c894ac8d0c98be2fc6ab1c18ff13bd21d3da80e2d41a157df0e0beaed62bd1832d5c91a93a74fccf47423a38ca437be6b6b4f38ea9f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Teamspeak3服务器搭建</title>
      <link href="/post/2e582926.html"/>
      <url>/post/2e582926.html</url>
      
        <content type="html"><![CDATA[<h1 id="什么是TeamSpeak3"><a href="#什么是TeamSpeak3" class="headerlink" title="什么是TeamSpeak3"></a>什么是TeamSpeak3</h1><p>Teamspeak（简称TS）是一款团队语音通讯工具，比普通的通讯工具具有更多的功能，相比国内的yy语音等界面更简洁更易用。你只需下载客户端即可登录已经搭设好的ts服务器。</p><h2 id="客户端下载"><a href="#客户端下载" class="headerlink" title="客户端下载"></a>客户端下载</h2><p><a href="https://teamspeak.com/zh-CN/downloads/"><strong>点击我下载</strong></a></p><h2 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h2><h3 id="我的服务器配置"><a href="#我的服务器配置" class="headerlink" title="我的服务器配置"></a>我的服务器配置</h3><ol><li>提供商：腾讯云</li><li>服务器：1G2核心，5M轻量级，40G的SSD，CentOS7_x64</li></ol><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><p>安装系统升级包:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><p>开启防火墙端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">9987/9987 udp</span><br><span class="line"></span><br><span class="line">10011/10011 tcp</span><br><span class="line"></span><br><span class="line">30033/30033 tcp</span><br></pre></td></tr></table></figure><p>创建一个新用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd teamspeak</span><br></pre></td></tr></table></figure><p>将服务器段文件上传至root文件夹下：[<a href="https://teamspeak.com/zh-CN/downloads/#server">下载地址</a>]</p><p>解压ts3服务器文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf teamspeak3-server_linux_amd64-3133.tar.bz2</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> teamspeak3-server_linux_amd64 teamspeak3</span><br></pre></td></tr></table></figure><p>给与用户权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -R teamspeak3 /home/teamspeak/</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R teamspeak:teamspeak /home/teamspeak/teamspeak3/</span><br></pre></td></tr></table></figure><p>切换操作者并运行服务器文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">su - teamspeak</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> teamspeak3</span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span> .ts3server_license_accepted</span><br><span class="line"></span><br><span class="line">./ts3server_startscript.sh start</span><br></pre></td></tr></table></figure><p>运行成功如下所示，将token保存下来到客户端运行时使用。</p><p><img src="https://gitee.com/foreverloveljj/notion-image/raw/master/img/Teamspeak3.png" alt="https://gitee.com/foreverloveljj/notion-image/raw/master/img/Teamspeak3.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Linux服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello,World!</title>
      <link href="/post/db8976d7.html"/>
      <url>/post/db8976d7.html</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>之前一段时间折腾过Hexo，但是配置复杂，突然发现了Gridea这一款操作简单的GUI的博客工具，使用了很长的时间，当时随着博客的增长，普通的需求不在能够满足了，再加上眼馋Butterfly这款主题，就继续回来折腾Hexo博客了。</p><h1 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h1><p>目前的博客还在慢慢的迁移之中，所以还要很多事情需要去做</p><ul><li>[ ] 继续美化主题</li><li>[ ] 完善内容</li><li>[ ] 迁移Gridea的文章到本博客之中</li><li>[ ] 完善之前的没有写完的博客内容</li></ul><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>宇宙很大，生活更大，在这里记录下不一样的生活与不同的世界。</p>]]></content>
      
      
      <categories>
          
          <category> 新事物 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
